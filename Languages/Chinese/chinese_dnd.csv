Name,English,Translation,Restrictions,Comment
_Language,Simplified Chinese,Simplified Chinese,,Language name - in English
_LanguageCode,zh,zh,,standard windows os language code this pack represents (can be primary code only ie. en or primary-secondary ie. en-GB)
_LanguageNative,Simplified Chinese,简体中文,,Language name in the native language
GMStdSeqSetHead_Story_1,"Set head position (in frames) of sequence instance ${sequenceelmid} to ${var}",“将序列实例${sequenceelmid}的头部位置(以帧为单位)设置为${var}”,,GML Visual story text
GMStdSeqGetHead_Story_1,"Get head position (in frames) of sequence instance ${sequenceelmid} into ${var}",“将序列实例${sequenceelmid}的头部位置(以帧为单位)获取到${var}”,,GML Visual story text
GMStdSeqGetHead_Story_2,"Get head position (in frames) of sequence instance ${sequenceelmid} into temp ${var}",“将序列实例${sequenceelmid}的头部位置(以帧为单位)获取到临时${var}”,,GML Visual story text
GMStdVar_Story_1,Set ${var} to ${expr}${show_input_count},设置${var}为${expr}${show_input_count},,GML Visual story text
GMStdVar_Story_2,Set ${var} to ${expr} on ${applyto}${show_input_count},在${applyto}${show_input_count}上将${var}设置为${expr},,GML Visual story text
GMStdVar_Story_3,Add ${expr} to ${var}${show_input_count},在${var}${show_input_count}中添加${expr},,GML Visual story text
GMStdVar_Story_4,Add ${expr} to ${var} on ${applyto}${show_input_count},在${applyto}${show_input_count}上添加${expr}到${var},,GML Visual story text
GMStdTempVar_Story_1,Declare temp ${var}${show_input_count},发布临时 ${var}${show_input_count},,GML Visual story text
GMStdTempVar_Story_2,Declare temp ${var} on ${applyto}${show_input_count},在${applyto}${show_input_count}上发布临时${var},,GML Visual story text
GMStdTempVar_Story_3,Declare temp ${var} and set it to ${value}${show_input_count},发布临时文件${var}，并将其设置为${value}${show_input_count},,GML Visual story text
GMStdTempVar_Story_4,Declare temp ${var} and set it to ${value} on ${applyto}${show_input_count},在${applyto}${show_input_count}上发布临时${var}并将其设置为${value},,GML Visual story text
GMStdSetGlobal_Story_1,Set global variable ${var} to ${value}${show_input_count},设置全局变量${var}为${value}${show_input_count},,GML Visual story text
GMStdSetGlobal_Story_2,Set global variable ${var} to ${value} on ${applyto}${show_input_count},在${applyto}${show_input_count}上设置全局变量${var}为${value},,GML Visual story text
GMStdSetGlobal_Story_3,Add ${value} to global variable ${var}${show_input_count},将${value}添加到全局变量${var}${show_input_count}中,,GML Visual story text
GMStdSetGlobal_Story_4,Add ${value} to global variable ${var} on ${applyto}${show_input_count},在${applyto}${show_input_count}上添加${value}到全局变量${var},,GML Visual story text
GMStdGetGlobal_Story_1,Get global variable ${var} into ${output}${show_input_count},获取全局变量${var}到${output}${show_input_count},,GML Visual story text
GMStdGetGlobal_Story_2,Get global variable ${var} into ${output} on ${applyto}${show_input_count},在${applyto}${show_input_count}上获取全局变量${var}到${output},,GML Visual story text
GMStdGetGlobal_Story_3,Get global variable ${var} into temp ${output}${show_input_count},获取全局变量${var}到临时变量${output}${show_input_count},,GML Visual story text
GMStdGetGlobal_Story_4,Get global variable ${var} into temp ${output} on ${applyto}${show_input_count},在${applyto}${show_input_count}上获取全局变量${var}到临时变量${output},,GML Visual story text
GMStdIfVar_Story_1,If ${var} is not equal to ${value},如果${var}不等于${value},,GML Visual story text
GMStdIfVar_Story_2,If ${var} is not equal to ${value} on ${applyto},如果${applyto}上的${var}不等于${value},,GML Visual story text
GMStdIfVar_Story_3,If ${var} is not less than ${value},如果${var}不小于${value},,GML Visual story text
GMStdIfVar_Story_4,If ${var} is not less than ${value} on ${applyto},如果${applyto}上的${var}不小于${value},,GML Visual story text
GMStdIfVar_Story_5,If ${var} is not greater than ${value},如果${var}不大于${value},,GML Visual story text
GMStdIfVar_Story_6,If ${var} is not greater than ${value} on ${applyto},如果${applyto}上的${var}不大于${value},,GML Visual story text
GMStdIfVar_Story_7,If ${var} is not less than or equal to ${value},如果${var}不小于或等于${value},,GML Visual story text
GMStdIfVar_Story_8,If ${var} is not less than or equal to ${value} on ${applyto},如果${applyto}上的${var}不小于或等于${value},,GML Visual story text
GMStdIfVar_Story_9,If ${var} is not greater than or equal to ${value},如果${var}不大于或等于${value},,GML Visual story text
GMStdIfVar_Story_10,If ${var} is not greater than or equal to ${value} on ${applyto},如果${applyto}上的${var}不大于或等于${value},,GML Visual story text
GMStdIfVar_Story_11,If ${var} is equal to ${value},如果${var}等于${value},,GML Visual story text
GMStdIfVar_Story_12,If ${var} is equal to ${value} on ${applyto},如果在${applyto}上，${var}等于${value},,GML Visual story text
GMStdIfVar_Story_13,If ${var} is less than ${value},如果${var}小于${value},,GML Visual story text
GMStdIfVar_Story_14,If ${var} is less than ${value} on ${applyto},如果在${applyto}上，${var}小于${value},,GML Visual story text
GMStdIfVar_Story_15,If ${var} is greater than ${value},如果${var}大于${value},,GML Visual story text
GMStdIfVar_Story_16,If ${var} is greater than ${value} on ${applyto},如果${applyto}上的${var}大于${value}，则${var}的值大于${value},,GML Visual story text
GMStdIfVar_Story_17,If ${var} is less than or equal to ${value},如果${var}小于或等于${value},,GML Visual story text
GMStdIfVar_Story_18,If ${var} is less than or equal to ${value} on ${applyto},如果在${applyto}上，${var}小于或等于${value},,GML Visual story text
GMStdIfVar_Story_19,If ${var} is greater than or equal to ${value},如果${var}大于或等于${value},,GML Visual story text
GMStdIfVar_Story_20,If ${var} is greater than or equal to ${value} on ${applyto},如果在${applyto}上，${var}大于或等于${value},,GML Visual story text
GMStdIfExpr_Story_1,If ${expr} is true${show_input_count},如果${expr}为真${show_input_count},,GML Visual story text
GMStdIfExpr_Story_2,If ${expr} is true on ${applyto}${show_input_count},如果${expr}在${applyto}${show_input_count}上为真，则${expr}为真,,GML Visual story text
GMStdIfExpr_Story_3,If ${expr} is false${show_input_count},如果${expr}为false${show_input_count},,GML Visual story text
GMStdIfExpr_Story_4,If ${expr} is false on ${applyto}${show_input_count},如果${expr}在${applyto}${show_input_count}上为假，那么在${applyto}${show_input_count}上的${expr}为假,,GML Visual story text
GMStdIfUndef_Story_1,If ${var} is undefined${show_input_count},如果${var}未定义${show_input_count},,GML Visual story text
GMStdIfUndef_Story_2,If ${var} is undefined on ${applyto}${show_input_count},如果${var}在${applyto}${show_input_count}上未定义,,GML Visual story text
GMStdIfUndef_Story_3,If ${var} is not undefined${show_input_count},如果${var}不是未定义的${show_input_count},,GML Visual story text
GMStdIfUndef_Story_4,If ${var} is not undefined on ${applyto}${show_input_count},如果${var}在${applyto}${show_input_count}上不是未定义的,,GML Visual story text
GMStdElse_Story,Else,其他,,GML Visual story text
GMStdExCode_Story_1,Execute code,执行代码,,GML Visual story text
GMStdExCode_Story_2,Execute code on ${applyto},在${applyto}上执行代码,,GML Visual story text
GMStdExCode_Story_3,${overridden_name},${overridden_name},,GML Visual story text
GMStdExCode_Story_4,${overridden_name} on ${applyto},${applyto}上的${overridden_name},,GML Visual story text
GMStdExScript_Story_1,Execute ${script},执行${script},,GML Visual story text
GMStdExScript_Story_2,Execute ${script} on ${applyto},在${applyto}上执行${script},,GML Visual story text
GMStdExScript_Story_3,Execute ${script} with 1 argument,执行带有1个参数的${script},,GML Visual story text
GMStdExScript_Story_4,Execute ${script} with 1 argument on ${applyto},在${applyto}上执行带有1个参数的${script},,GML Visual story text
GMStdExScript_Story_5,Execute ${script} with ${input_count} arguments,用${input_count}参数执行${script},,GML Visual story text
GMStdExScript_Story_6,Execute ${script} with ${input_count} arguments on ${applyto},在${applyto}上执行带有${input_count}参数的${script},,GML Visual story text
GMStdExScript_Story_7,Execute and set ${var} to return value of ${script},执行并设置${var}为${script}的返回值,,GML Visual story text
GMStdExScript_Story_8,Execute and set ${var} to return value of ${script} on ${applyto},在${applyto}上执行并设置${var}为${script}的返回值,,GML Visual story text
GMStdExScript_Story_9,Execute and set ${var} to return value of ${script} with 1 argument,执行并设置${var}为${script}的返回值，有一个参数,,GML Visual story text
GMStdExScript_Story_10,Execute and set ${var} to return value of ${script} with 1 argument on ${applyto},在${applyto}上执行并设置${var}为${script}的返回值，并有一个参数,,GML Visual story text
GMStdExScript_Story_11,Execute and set ${var} to return value of ${script} with ${input_count} arguments,执行并设置${var}为${script}的返回值，参数为${input_count},,GML Visual story text
GMStdExScript_Story_12,Execute and set ${var} to return value of ${script} with ${input_count} arguments on ${applyto},在${applyto}上执行并设置${var}为${script}的返回值，参数为${input_count},,GML Visual story text
GMStdExScript_Story_13,Execute and set temp ${var} to return value of ${script},执行并设置临时值${var}为${script}的返回值,,GML Visual story text
GMStdExScript_Story_14,Execute and set temp ${var} to return value of ${script} on ${applyto},在${applyto}上执行并设置临时的${var}来返回${script}的值,,GML Visual story text
GMStdExScript_Story_15,Execute and set temp ${var} to return value of ${script} with 1 argument,执行并设置临时变量${var}为${script}的返回值，有1个参数,,GML Visual story text
GMStdExScript_Story_16,Execute and set temp ${var} to return value of ${script} with 1 argument on ${applyto},在${applyto}上执行并设置临时的${var}为${script}的返回值，并有一个参数,,GML Visual story text
GMStdExScript_Story_17,Execute and set temp ${var} to return value of ${script} with ${input_count} arguments,执行并设置临时参数${var}，以返回${script}的值，参数为${input_count},,GML Visual story text
GMStdExScript_Story_18,Execute and set temp ${var} to return value of ${script} with ${input_count} arguments on ${applyto},在${applyto}上执行并设置临时的${var}来返回${script}的值，参数为${input_count},,GML Visual story text
GMStdCallFunction_Story_1,Call ${function},调用${function},,GML Visual story text
GMStdCallFunction_Story_2,Call ${function} on ${applyto},在${applyto}上调用${function},,GML Visual story text
GMStdCallFunction_Story_3,Call ${function} with 1 argument,带1个参数调用${function},,GML Visual story text
GMStdCallFunction_Story_4,Call ${function} with 1 argument on ${applyto},在${applyto}上调用带有1个参数的${function},,GML Visual story text
GMStdCallFunction_Story_5,Call ${function} with ${input_count} arguments,使用${input_count}参数调用${function},,GML Visual story text
GMStdCallFunction_Story_6,Call ${function} with ${input_count} arguments on ${applyto},在${applyto}上调用带有${input_count}参数的${function},,GML Visual story text
GMStdCallFunction_Story_7,Set ${var} to return value of ${function},设置${var}为${function}的返回值,,GML Visual story text
GMStdCallFunction_Story_8,Set ${var} to return value of ${function} on ${applyto},在${applyto}上设置${var}为${function}的返回值,,GML Visual story text
GMStdCallFunction_Story_9,Set ${var} to return value of ${function} with 1 argument,带1个参数，设置${var}为${function}的返回值,,GML Visual story text
GMStdCallFunction_Story_10,Set ${var} to return value of ${function} with 1 argument on ${applyto},在${applyto}上带1个参数，设置${var}为${function}的返回值,,GML Visual story text
GMStdCallFunction_Story_11,Set ${var} to return value of ${function} with ${input_count} arguments,设置${var}为${function}的返回值，参数为${input_count},,GML Visual story text
GMStdCallFunction_Story_12,Set ${var} to return value of ${function} with ${input_count} arguments on ${applyto},在${applyto}上设置${var}为${function}的返回值，参数为${input_count},,GML Visual story text
GMStdCallFunction_Story_13,Set temp ${var} to return value of ${function},设置临时值${var}为${function}的返回值,,GML Visual story text
GMStdCallFunction_Story_14,Set temp ${var} to return value of ${function} on ${applyto},在${applyto}上设置临时${var}为${function}的返回值,,GML Visual story text
GMStdCallFunction_Story_15,Set temp ${var} to return value of ${function} with 1 argument,设置临时参数${var}为${function}的返回值，有1个参数,,GML Visual story text
GMStdCallFunction_Story_16,Set temp ${var} to return value of ${function} with 1 argument on ${applyto},在${applyto}上设置临时的${var}来返回${function}的值，有1个参数,,GML Visual story text
GMStdCallFunction_Story_17,Set temp ${var} to return value of ${function} with ${input_count} arguments,设置临时参数${var}为${function}的返回值，参数为${input_count},,GML Visual story text
GMStdCallFunction_Story_18,Set temp ${var} to return value of ${function} with ${input_count} arguments on ${applyto},在${applyto}上设置临时参数${var}来返回${function}的值，参数为${input_count},,GML Visual story text
GMStdNew_Story_1,Set ${var} to new instance of ${function},设置${var}为${function}的新实例,,GML Visual story text
GMStdNew_Story_2,Set ${var} to new instance of ${function} with 1 argument,将${var}设为${function}的新实例，有1个参数,,GML Visual story text
GMStdNew_Story_3,Set ${var} to new instance of ${function} with ${input_count} arguments,设置${var}为${function}的新实例，参数为${input_count},,GML Visual story text
GMStdNew_Story_4,Set temp ${var} to new instance of ${function},设置临时${var}为${function}的新实例,,GML Visual story text
GMStdNew_Story_5,Set temp ${var} to new instance of ${function} with 1 argument,带1个参数，将temp ${var}设置为${function}的新实例,,GML Visual story text
GMStdNew_Story_6,Set temp ${var} to new instance of ${function} with ${input_count} arguments,将临时值${var}设置为${function}的新实例，参数为${input_count},,GML Visual story text
GMStdRet_Story_1,Return ${value},返回${value},,GML Visual story text
GMStdRet_Story_2,Return ${value} on ${applyto},在${applyto}上返回${value},,GML Visual story text
GMStdApplyTo_Story_1,Apply to ${applyto},应用到${applyto},,GML Visual story text
GMStdMacro_Story_1,Define macro ${macro} as ${value}${show_input_count},将宏${macro}定义为${value}${show_input_count},,GML Visual story text
GMStdMacro_Story_2,Define macro ${macro} as ${value} on ${applyto}${show_input_count},在${applyto}${show_input_count}上定义宏${macro}为${value},,GML Visual story text
GMStdExit_Story,Exit the current event,退出当前事件,,GML Visual story text
GMStdInstCreate_Story_1,Create ${objectid} at ${dnd_pos},在${dnd_pos}处创建${objectid},,GML Visual story text
GMStdInstCreate_Story_2,Create ${objectid} at ${dnd_pos} on ${applyto},在${applyto}的${dnd_pos}处创建${objectid},,GML Visual story text
GMStdInstCreate_Story_3,Create ${objectid} at ${dnd_pos} into ${var},在${dnd_pos}处创建${objectid}到${var},,GML Visual story text
GMStdInstCreate_Story_4,Create ${objectid} at ${dnd_pos} into ${var} on ${applyto},在${dnd_pos}处创建${objectid}到${var}的${applyto},,GML Visual story text
GMStdInstCreate_Story_5,Create ${objectid} at ${dnd_pos} into temp ${var},在${dnd_pos}处创建${objectid}到临时${var},,GML Visual story text
GMStdInstCreate_Story_6,Create ${objectid} at ${dnd_pos} into temp ${var} on ${applyto},在${dnd_pos}处创建${objectid}到${applyto}的临时${var},,GML Visual story text
GMStdInstDestroy_Story_1,Destroy this instance,销毁这个实例,,GML Visual story text
GMStdInstDestroy_Story_2,Destroy ${applyto} on ${applyto},在${applyto}上销毁${applyto},,GML Visual story text
GMStdDestroyAtPos_Story_1,Destroy instances at ${dnd_pos},销毁位于${dnd_pos}的实例,,GML Visual story text
GMStdDestroyAtPos_Story_2,Destroy instances at ${dnd_pos} on ${applyto},在${applyto}上销毁${dnd_pos}的实例,,GML Visual story text
GMStdInstChange_Story_1,Change into ${objind},改为${objind},,GML Visual story text
GMStdInstChange_Story_2,Change ${applyto} into ${objind} on ${applyto},在${applyto}上将${applyto}改为${objind},,GML Visual story text
GMStdSetAlarm_Story_1,Set alarm ${alarm} to ${steps}${show_input_count},将计时器 ${alarm} 设置为 ${steps}${show_input_count},,GML Visual story text
GMStdSetAlarm_Story_2,Set alarm ${alarm} to ${steps} on ${applyto}${show_input_count},在${applyto}${show_input_count}上将${alarm}设置为${steps}计时器,,GML Visual story text
GMStdSetAlarm_Story_3,Add ${steps} to alarm ${alarm}${show_input_count},将${steps}添加到计时器${alarm}${show_input_count},,GML Visual story text
GMStdSetAlarm_Story_4,Add ${steps} to alarm ${alarm} on ${applyto}${show_input_count},在${applyto}${show_input_count}上添加${steps}为计时器${alarm},,GML Visual story text
GMStdGetAlarm_Story_1,Get alarm ${alarm} into ${var},将计时器${alarm}放入${var},,GML Visual story text
GMStdGetAlarm_Story_2,Get alarm ${alarm} into ${var} on ${applyto},在${applyto}上将计时器${alarm}放入${var},,GML Visual story text
GMStdGetAlarm_Story_3,Get alarm ${alarm} into temp ${var},将计时器${alarm}放入临时${var},,GML Visual story text
GMStdGetAlarm_Story_4,Get alarm ${alarm} into temp ${var} on ${applyto},在${applyto}上将计时器${alarm}放入临时${var},,GML Visual story text
GMStdInstCount_Story_1,Get ${object} count into ${var},将${object}的计数放入${var}中,,GML Visual story text
GMStdInstCount_Story_2,Get ${object} count into ${var} on ${applyto},在${applyto}上将${object}计数到${var}中,,GML Visual story text
GMStdInstCount_Story_3,Get ${object} count into temp ${var},将${object}的计数放入临时的${var}中,,GML Visual story text
GMStdInstCount_Story_4,Get ${object} count into temp ${var} on ${applyto},在${applyto}上获取${对象}计数到临时${var},,GML Visual story text
GMStdCallUserEvent_Story_1,Call user event ${event}${show_input_count},调用用户事件${event}${show_input_count},,GML Visual story text
GMStdCallUserEvent_Story_2,Call user event ${event} on ${applyto}${show_input_count},在${applyto}${show_input_count}上调用用户事件${event},,GML Visual story text
GMStdSetInstanceVar_Story_1,Set instance variable ${dnd_set_inst_vars} to ${value}${show_input_count},设置实例变量${dnd_set_inst_vars}为${value}${show_input_count},,GML Visual story text
GMStdSetInstanceVar_Story_2,Set instance variable ${dnd_set_inst_vars} to ${value} on ${applyto}${show_input_count},在${applyto}${show_input_count}上设置实例变量${dnd_set_inst_vars}为${value},,GML Visual story text
GMStdGetInstanceVar_Story_1,Get instance variable ${dnd_get_inst_vars} into ${target}${show_input_count},获取实例变量${dnd_get_inst_vars}到${target}${show_input_count},,GML Visual story text
GMStdGetInstanceVar_Story_2,Get instance variable ${dnd_get_inst_vars} into ${target} on ${applyto}${show_input_count},在${applyto}${show_input_count}上获取实例变量${dnd_get_inst_vars}到${target},,GML Visual story text
GMStdGetInstanceVar_Story_3,Get instance variable ${dnd_get_inst_vars} into temp ${target}${show_input_count},获取实例变量${dnd_get_inst_vars}到临时变量${target}${show_input_count},,GML Visual story text
GMStdGetInstanceVar_Story_4,Get instance variable ${dnd_get_inst_vars} into temp ${target} on ${applyto}${show_input_count},在${applyto}${show_input_count}上获取实例变量${dnd_get_inst_vars}到临时变量${target},,GML Visual story text
GMStdSetSprite_Story_1,Set sprite to ${spriteind} at frame ${imageind},在帧${imageind}处设置精灵为${spriteind},,GML Visual story text
GMStdSetSprite_Story_2,Set sprite to ${spriteind} at frame ${imageind} on ${applyto},在${applyto}上的帧${imageind}处将spriteind设置为${spriteind},,GML Visual story text
GMStdRotSprite_Story_1,Set rotation to ${angle},设置旋转角度为${角度},,GML Visual story text
GMStdRotSprite_Story_2,Set rotation to ${angle} on ${applyto},在${applyto}上设置旋转角度为${angle},,GML Visual story text
GMStdRotSprite_Story_3,Add ${angle} to rotation,将${角度}添加到旋转中,,GML Visual story text
GMStdRotSprite_Story_4,Add ${angle} to rotation on ${applyto},在${applyto}上添加${angle}进行旋转,,GML Visual story text
GMStdSpriteAnimSpd_Story_1,Set animation speed to ${speed},设置动画速度为${speed},,GML Visual story text
GMStdSpriteAnimSpd_Story_2,Set animation speed to ${speed} on ${applyto},在${applyto}上设置动画速度为${speed},,GML Visual story text
GMStdSpriteAnimSpd_Story_3,Add ${speed} to animation speed,将${speed}加入动画速度,,GML Visual story text
GMStdSpriteAnimSpd_Story_4,Add ${speed} to animation speed on ${applyto},在${applyto}上添加${speed}为动画速度,,GML Visual story text
GMStdSpriteScale_Story_1,"Scale to ${xscale},${yscale}","缩放至${xscale},${yscale}",,GML Visual story text
GMStdSpriteScale_Story_2,"Scale to ${xscale},image_yscale","缩放至${xscale},image_yscale",,GML Visual story text
GMStdSpriteScale_Story_3,"Scale to ${xscale},image_yscale+${yscale}","缩放至${xscale},image_yscale+${yscale}",,GML Visual story text
GMStdSpriteScale_Story_4,"Scale to image_xscale,${yscale}","缩放为image_xscale,${yscale}",,GML Visual story text
GMStdSpriteScale_Story_5,"Scale to image_xscale,image_yscale","缩放为图像_xscale,图像_yscale",,GML Visual story text
GMStdSpriteScale_Story_6,"Scale to image_xscale,image_yscale+${yscale}","缩放为image_xscale,image_yscale+${yscale}",,GML Visual story text
GMStdSpriteScale_Story_7,"Scale to image_xscale+${xscale},${yscale}","缩放为image_xscale+${xscale},${yscale}",,GML Visual story text
GMStdSpriteScale_Story_8,"Scale to image_xscale+${xscale},image_yscale","缩放为image_xscale+${xscale},image_yscale",,GML Visual story text
GMStdSpriteScale_Story_9,"Scale to image_xscale+${xscale},image_yscale+${yscale}","缩放为image_xscale+${xscale},image_yscale+${yscale}",,GML Visual story text
GMStdSpriteScale_Story_10,"Scale ${applyto} to ${xscale},${yscale} on ${applyto}","在${applyto}上将${applyto}调整为${xscale},${yscale}",,GML Visual story text
GMStdSpriteScale_Story_11,"Scale ${applyto} to ${xscale},image_yscale on ${applyto}","在${applyto}上将${applyto}缩放为${xscale},image_yscale",,GML Visual story text
GMStdSpriteScale_Story_12,"Scale ${applyto} to ${xscale},image_yscale+${yscale} on ${applyto}","在${applyto}上将${applyto}缩放为${xscale},image_yscale+${yscale}",,GML Visual story text
GMStdSpriteScale_Story_13,"Scale ${applyto} to image_xscale,${yscale} on ${applyto}","在${applyto}上将${applyto}缩放为image_xscale,${yscale}",,GML Visual story text
GMStdSpriteScale_Story_14,"Scale ${applyto} to image_xscale,image_yscale on ${applyto}","在${applyto}上将${applyto}缩放为image_xscale,image_yscale",,GML Visual story text
GMStdSpriteScale_Story_15,"Scale ${applyto} to image_xscale,image_yscale+${yscale} on ${applyto}","在${applyto}上将${applyto}缩放为image_xscale,image_yscale+${yscale}",,GML Visual story text
GMStdSpriteScale_Story_16,"Scale ${applyto} to image_xscale+${xscale},${yscale} on ${applyto}","在${applyto}上将${applyto}缩放为image_xscale+${xscale},${yscale}",,GML Visual story text
GMStdSpriteScale_Story_17,"Scale ${applyto} to image_xscale+${xscale},image_yscale on ${applyto}","在${applyto}上将${applyto}缩放为image_xscale+${xscale},image_yscale",,GML Visual story text
GMStdSpriteScale_Story_18,"Scale ${applyto} to image_xscale+${xscale},image_yscale+${yscale} on ${applyto}","在${applyto}上将${applyto}缩放为image_xscale+${xscale},image_yscale+${yscale}",,GML Visual story text
GMStdSpriteAlpha_Story_1,Set alpha to ${alpha},设置alpha为${alpha},,GML Visual story text
GMStdSpriteAlpha_Story_2,Set alpha to ${alpha} on ${applyto},在${applyto}上设置alpha为${alpha},,GML Visual story text
GMStdSpriteAlpha_Story_3,Add ${alpha} to alpha,添加${alpha}到alpha,,GML Visual story text
GMStdSpriteAlpha_Story_4,Add ${alpha} to alpha on ${applyto},在${applyto}上添加${alpha}为alpha,,GML Visual story text
GMStdSpriteColor_Story_1,Set sprite blend colour to ${colour},设置精灵混合颜色为${colour},,GML Visual story text
GMStdSpriteColor_Story_2,Set sprite blend colour to ${colour} on ${applyto},在${applyto}上设置精灵混合颜色为${colour},,GML Visual story text
GMStdInstExists_Story_1,Check if ${obj} does not exist,检查${obj}是否不存在,,GML Visual story text
GMStdInstExists_Story_2,Check if ${obj} does not exist on ${applyto},检查${obj}是否存在于${applyto}上,,GML Visual story text
GMStdInstExists_Story_3,Check if ${obj} exists,检查${obj}是否存在,,GML Visual story text
GMStdInstExists_Story_4,Check if ${obj} exists on ${applyto},检查${applyto}上是否存在${obj},,GML Visual story text
GMStdInheritEvent_Story_1,Call parent event,呼叫上级事件,,GML Visual story text
GMStdInheritEvent_Story_2,Call parent event on ${applyto},在${applyto}上调用上级事件,,GML Visual story text
GMStdIfSequenceExists_Story_1,If sequence ${obj} exists,如果序列${obj}存在,,GML Visual story text
GMStdIfSequenceExists_Story_2,If sequence ${obj} does not exists,如果序列${obj}不存在,,GML Visual story text
GMStdSeqDestroy_Story_1,Destroy sequence ${var},销毁序列 ${var},,GML Visual story text
GMStdSeqPlay_Story_1,Play sequence ${var},播放序列 ${var},,GML Visual story text
GMStdSeqPause_Story_1,Pause sequence ${var},暂停序列 ${var},,GML Visual story text
GMStdSeqSetPos_Story_1,Set position of sequence instance ${sequenceelmid} to ${dnd_pos},设置序列实例${sequenceelmid}的位置为${dnd_pos},,GML Visual story text
GMStdSeqCreate_Story_1,Create ${sequenceid} at ${dnd_pos},在${dnd_pos}处创建${sequenceid},,GML Visual story text
GMStdSeqCreate_Story_2,Create ${sequenceid} at ${dnd_pos} on ${applyto},在${applyto}的${dnd_pos}处创建${sequenceid},,GML Visual story text
GMStdSeqCreate_Story_3,Create ${sequenceid} at ${dnd_pos} into ${var},在${dnd_pos}处创建${sequenceid}到${var},,GML Visual story text
GMStdSeqCreate_Story_4,Create ${sequenceid} at ${dnd_pos} into ${var} on ${applyto},在${dnd_pos}处创建${sequenceid}到${var}的${applyto},,GML Visual story text
GMStdSeqCreate_Story_5,Create ${sequenceid} at ${dnd_pos} into temp ${var},在${dnd_pos}处创建${sequenceid}到临时${var},,GML Visual story text
GMStdSeqCreate_Story_6,Create ${sequenceid} at ${dnd_pos} into temp ${var} on ${applyto},在${applyto}上的${dnd_pos}处创建${sequenceid}到临时${var}中,,GML Visual story text
GMStdSeqGetPos_Story_1,Get position of sequence instance ${sequenceelmid} into ${varx} and ${vary},获取序列实例${sequenceelmid}在${varx}和${vary}中的位置,,GML Visual story text
GMStdSeqGetPos_Story_2,Get position of sequence instance ${sequenceelmid} into temp ${varx} and ${vary},将序列实例${sequenceelmid}的位置放入临时值${varx}和${vary}中,,GML Visual story text
GMStdSeqGetPos_Story_3,Get position of sequence instance ${sequenceelmid} into ${varx} and temp ${vary},将序列实例${sequenceelmid}的位置放入${varx}和临时${vary}中,,GML Visual story text
GMStdSeqGetPos_Story_4,Get position of sequence instance ${sequenceelmid} into temp ${varx} and temp ${vary},将序列实例${sequenceelmid}的位置放入临时文件${varx}和临时文件${vary}中,,GML Visual story text
GMStdSeqGetLength_Story_1,"Get length of sequence instance ${sequenceelmid} into ${var}",“将序列实例${sequenceelmid}的长度获取到${var}”,,GML Visual story text
GMStdSeqGetLength_Story_2,"Get length of sequence instance ${sequenceelmid} into temp ${var}",“将序列实例${sequenceelmid}的长度获取到临时${var}”,,GML Visual story text
GMStdIfMousePressed_Story_1,If mouse button ${button} is pressed,如果鼠标按钮${button}被按下了,,GML Visual story text
GMStdIfMousePressed_Story_2,If mouse button ${button} is pressed on ${applyto},如果在${applyto}上按下了鼠标按钮${button}，那么就会有一个新的应用,,GML Visual story text
GMStdIfMousePressed_Story_3,If mouse button ${button} is not pressed,如果鼠标按钮${button}没有被按下,,GML Visual story text
GMStdIfMousePressed_Story_4,If mouse button ${button} is not pressed on ${applyto},如果在${applyto}上没有按下鼠标按钮${button}，则会导致${applyto}上的${button}无法使用,,GML Visual story text
GMStdIfMouseDown_Story_1,If mouse button ${button} is down,如果鼠标按钮${button}被按下,,GML Visual story text
GMStdIfMouseDown_Story_2,If mouse button ${button} is down on ${applyto},如果鼠标按钮${button}在${applyto}上向下，则${button}将被删除,,GML Visual story text
GMStdIfMouseDown_Story_3,If mouse button ${button} is not down,如果鼠标按钮${button}没有按下,,GML Visual story text
GMStdIfMouseDown_Story_4,If mouse button ${button} is not down on ${applyto},如果鼠标按钮${button}在${applyto}上没有按下,,GML Visual story text
GMStdIfMouseUp_Story_1,If mouse button ${button} is released,如果松开鼠标按钮${button}，则会出现以下情况,,GML Visual story text
GMStdIfMouseUp_Story_2,If mouse button ${button} is released on ${applyto},如果在${applyto}上松开了鼠标按钮${button}，那么就会出现${applyto},,GML Visual story text
GMStdIfMouseUp_Story_3,If mouse button ${button} is not released,如果鼠标按钮${button}未被释放,,GML Visual story text
GMStdIfMouseUp_Story_4,If mouse button ${button} is not released on ${applyto},如果鼠标按钮${button}在${applyto}上没有松开，那么就会出现${button},,GML Visual story text
GMStdIfKeyPressed_Story_1,If ${key} is pressed,如果${key}被按下,,GML Visual story text
GMStdIfKeyPressed_Story_2,If ${key} is pressed on ${applyto},如果在${applyto}上按下了${key}，就会出现${key},,GML Visual story text
GMStdIfKeyPressed_Story_3,If ${key} is not pressed,如果${key}没有被按下,,GML Visual story text
GMStdIfKeyPressed_Story_4,If ${key} is not pressed on ${applyto},如果在${applyto}上没有按下${key}，则会出现${key},,GML Visual story text
GMStdIfKeyDown_Story_1,If ${key} is down,如果${key}失效,,GML Visual story text
GMStdIfKeyDown_Story_2,If ${key} is down on ${applyto},如果${key}在${applyto}上被删除了,,GML Visual story text
GMStdIfKeyDown_Story_3,If ${key} is not down,如果${key}没有关闭,,GML Visual story text
GMStdIfKeyDown_Story_4,If ${key} is not down on ${applyto},如果${key}在${applyto}上没有下来,,GML Visual story text
GMStdIfKeyUp_Story_1,If ${key} is released,如果${key}被释放,,GML Visual story text
GMStdIfKeyUp_Story_2,If ${key} is released on ${applyto},如果${key}在${applyto}上被放行,,GML Visual story text
GMStdIfKeyUp_Story_3,If ${key} is not released,如果${key}没有被释放,,GML Visual story text
GMStdIfKeyUp_Story_4,If ${key} is not released on ${applyto},如果${key}在${applyto}上没有被放行,,GML Visual story text
GMStdVKeyShow_Story_1,Show virtual keyboard with ${keyboard_type},用${keyboard_type}显示虚拟键盘,,GML Visual story text
GMStdVKeyShow_Story_2,Show virtual keyboard with ${keyboard_type} on ${applyto},在${applyto}上显示带有${keyboard_type}的虚拟键盘,,GML Visual story text
GMStdVKeyHide_Story,Hide virtual keyboard,隐藏虚拟键盘,,GML Visual story text
GMStdVKeyHeight_Story_1,Get virtual keyboard height into ${target},获取虚拟键盘高度到${target},,GML Visual story text
GMStdVKeyHeight_Story_2,Get virtual keyboard height into temp ${target},获取虚拟键盘高度到临时的${target},,GML Visual story text
GMStdVKeyStatus_Story_1,If virtual keyboard is showing,如果虚拟键盘显示,,GML Visual story text
GMStdVKeyStatus_Story_2,If virtual keyboard is showing on ${applyto},如果虚拟键盘显示在${applyto}上,,GML Visual story text
GMStdVKeyStatus_Story_3,If virtual keyboard is showing into ${target},如果虚拟键盘显示到${target}中，那么就会出现在${target}中,,GML Visual story text
GMStdVKeyStatus_Story_4,If virtual keyboard is showing into ${target} on ${applyto},如果虚拟键盘在${applyto}上显示为${target},,GML Visual story text
GMStdVKeyStatus_Story_5,If virtual keyboard is showing into temp ${target},如果虚拟键盘显示为临时的${target},,GML Visual story text
GMStdVKeyStatus_Story_6,If virtual keyboard is showing into temp ${target} on ${applyto},如果虚拟键盘在${applyto}上显示为临时${target},,GML Visual story text
GMStdVKeyStatus_Story_7,If virtual keyboard is not showing,如果虚拟键盘不显示,,GML Visual story text
GMStdVKeyStatus_Story_8,If virtual keyboard is not showing on ${applyto},如果虚拟键盘没有显示在${applyto}上，那么就会出现在${applyto}上,,GML Visual story text
GMStdVKeyStatus_Story_9,If virtual keyboard is not showing into ${target},如果虚拟键盘没有显示到${target}中,,GML Visual story text
GMStdVKeyStatus_Story_10,If virtual keyboard is not showing into ${target} on ${applyto},如果虚拟键盘在${applyto}上没有显示到${target}中,,GML Visual story text
GMStdVKeyStatus_Story_11,If virtual keyboard is not showing into temp ${target},如果虚拟键盘没有显示到临时的${target},,GML Visual story text
GMStdVKeyStatus_Story_12,If virtual keyboard is not showing into temp ${target} on ${applyto},如果虚拟键盘在${applyto}上没有显示到临时${target},,GML Visual story text
GMStdGPAxis_Story_1,Get ${axis} axis value on gamepad ${gp} into ${var},将游戏手柄上的${axis}轴值${gp}导入${var},,GML Visual story text
GMStdGPAxis_Story_2,Get ${axis} axis value on gamepad ${gp} into ${var} on ${applyto},在${applyto}上获取${axis}轴的值到${var},,GML Visual story text
GMStdGPAxis_Story_3,Get ${axis} axis value on gamepad ${gp} into temp ${var},将游戏手柄上的${axis}轴值${gp}导入临时${var},,GML Visual story text
GMStdGPAxis_Story_4,Get ${axis} axis value on gamepad ${gp} into temp ${var} on ${applyto},在${applyto}上获取${axis}轴的值到临时${var},,GML Visual story text
GMStdGPTrigger_Story_1,Get ${trigger} value on gamepad ${gp} into ${var},将游戏手柄上的${trigger}值存入${var},,GML Visual story text
GMStdGPTrigger_Story_2,Get ${trigger} value on gamepad ${gp} into ${var} on ${applyto},在${applyto}上将游戏手柄上的${trigger}值转为${var},,GML Visual story text
GMStdGPTrigger_Story_3,Get ${trigger} value on gamepad ${gp} into temp ${var},将游戏手柄上的${trigger}值存入临时${var},,GML Visual story text
GMStdGPTrigger_Story_4,Get ${trigger} value on gamepad ${gp} into temp ${var} on ${applyto},在${applyto}上获取${trigger}值到临时${var},,GML Visual story text
GMStdGpDeviceC_Story_1,Get gamepad device count into ${var},将游戏手柄设备的数量输入${var},,GML Visual story text
GMStdGpDeviceC_Story_2,Get gamepad device count into ${var} on ${applyto},在${applyto}上获取游戏手柄设备数量到${var},,GML Visual story text
GMStdGpDeviceC_Story_3,Get gamepad device count into temp ${var},获取游戏手柄设备数量到临时的${var}中,,GML Visual story text
GMStdGpDeviceC_Story_4,Get gamepad device count into temp ${var} on ${applyto},在${applyto}上获取游戏手柄设备数量到临时${var}中,,GML Visual story text
GMStdGPConnc_Story_1,Get whether gamepad ${gp} is connected into ${var},获取游戏手柄${gp}是否连接到${var},,GML Visual story text
GMStdGPConnc_Story_2,Get whether gamepad ${gp} is connected into ${var} on ${applyto},在${applyto}上获取游戏手柄${gp}是否连接到${var},,GML Visual story text
GMStdGPConnc_Story_3,Get whether gamepad ${gp} is connected into temp ${var},获取游戏手柄${gp}是否连接到临时${var},,GML Visual story text
GMStdGPConnc_Story_4,Get whether gamepad ${gp} is connected into temp ${var} on ${applyto},在${applyto}上获取游戏手柄${gp}是否连接到临时${var},,GML Visual story text
GMStdGPDeadzone_Story_1,Set deadzone of gamepad ${gp} to ${deadzone},将游戏手柄${gp}的死区设置为${deadzone},,GML Visual story text
GMStdGPDeadzone_Story_2,Set deadzone of gamepad ${gp} to ${deadzone} on ${applyto},在${applyto}上设置游戏手柄${gp}的死区为${deadzone},,GML Visual story text
GMStdGPThreshold_Story_1,Set button threshold of gamepad ${gp} to ${threshold},设置游戏手柄${gp}的按键阈值为${threshold},,GML Visual story text
GMStdGPThreshold_Story_2,Set button threshold of gamepad ${gp} to ${threshold} on ${applyto},在${applyto}上设置游戏手柄${gp}的按键阈值为${threshold},,GML Visual story text
GMStdIfGPDown_Story_1,If ${btn} on gamepad ${gp} is down,如果游戏手柄上的${btn} ${gp}下降了,,GML Visual story text
GMStdIfGPDown_Story_2,If ${btn} on gamepad ${gp} is down on ${applyto},如果游戏手柄上的${btn}，${gp}在${applyto}上下降,,GML Visual story text
GMStdIfGPDown_Story_3,If ${btn} on gamepad ${gp} is not down,如果游戏手柄上的${btn} ${gp}没有放下,,GML Visual story text
GMStdIfGPDown_Story_4,If ${btn} on gamepad ${gp} is not down on ${applyto},如果游戏手柄上的${btn}，${gp}在${applyto}上没有倒下,,GML Visual story text
GMStdIfGPPressed_Story_1,If ${btn} on gamepad ${gp} is pressed,如果按下游戏手柄上的${btn}，${gp},,GML Visual story text
GMStdIfGPPressed_Story_2,If ${btn} on gamepad ${gp} is pressed on ${applyto},如果在游戏手柄上的${btn}上按下${gp}上的${applyto},,GML Visual story text
GMStdIfGPPressed_Story_3,If ${btn} on gamepad ${gp} is not pressed,如果游戏手柄上的${btn}没有被按下${gp}，则会出现${btn},,GML Visual story text
GMStdIfGPPressed_Story_4,If ${btn} on gamepad ${gp} is not pressed on ${applyto},如果游戏手柄上的${btn}${gp}没有被按到${applyto}上,,GML Visual story text
GMStdIfGPUp_Story_1,If ${btn} on gamepad ${gp} is released,如果游戏手柄上的${btn}被释放，则${gp}被释放,,GML Visual story text
GMStdIfGPUp_Story_2,If ${btn} on gamepad ${gp} is released on ${applyto},如果游戏手柄上的${btn}，${gp}在${applyto}上释放,,GML Visual story text
GMStdIfGPUp_Story_3,If ${btn} on gamepad ${gp} is not released,如果游戏手柄上的${btn} ${gp}没有被释放,,GML Visual story text
GMStdIfGPUp_Story_4,If ${btn} on gamepad ${gp} is not released on ${applyto},如果游戏手柄上的${btn} ${gp}没有在${applyto}上释放,,GML Visual story text
GMStdDirFixed_Story_1,Stop movement,停止操作,,GML Visual story text
GMStdDirFixed_Story_2,Stop movement on ${applyto},停止对${applyto}的操作,,GML Visual story text
GMStdDirFixed_Story_3,Set direction to ${direction},设置方向为${direction},,GML Visual story text
GMStdDirFixed_Story_4,Set direction to ${direction} on ${applyto},在${applyto}上设置方向为${direction},,GML Visual story text
GMStdDirFree_Story_1,Add ${direction} to direction,将${direction}添加到方向中,,GML Visual story text
GMStdDirFree_Story_2,Add ${direction} to direction on ${applyto},在${applyto}上添加${direction}为方向,,GML Visual story text
GMStdDirPoint_Story_1,Set direction towards ${dnd_position},设置方向为${dnd_position},,GML Visual story text
GMStdDirPoint_Story_2,Set direction towards ${dnd_position} on ${applyto},在${applyto}上设置方向为${dnd_position},,GML Visual story text
GMStdDirRandom_Story_1,Set random direction from ${direction},从${direction}开始设置随机方向,,GML Visual story text
GMStdDirRandom_Story_2,Set random direction from ${direction} on ${applyto},在${applyto}上从${direction}随机设置方向,,GML Visual story text
GMStdSpeed_Story_1,Add ${speed} to speed,将${speed}加入速度,,GML Visual story text
GMStdSpeed_Story_2,Add ${speed} to speed on ${applyto},在${applyto}上添加${speed}为速度,,GML Visual story text
GMStdSpeed_Story_3,Set speed to ${speed},设置速度为${speed},,GML Visual story text
GMStdSpeed_Story_4,Set speed to ${speed} on ${applyto},在${applyto}上设置速度为${speed},,GML Visual story text
GMStdSpeed_Story_5,Add ${speed} to horizontal speed,将${speed}加入到水平速度中,,GML Visual story text
GMStdSpeed_Story_6,Add ${speed} to horizontal speed on ${applyto},在${applyto}上添加${speed}为水平速度,,GML Visual story text
GMStdSpeed_Story_7,Set horizontal speed to ${speed},设置水平速度为${speed},,GML Visual story text
GMStdSpeed_Story_8,Set horizontal speed to ${speed} on ${applyto},在${applyto}上设置水平速度为${speed},,GML Visual story text
GMStdSpeed_Story_9,Add ${speed} to vertical speed,将${speed}加入到垂直速度中,,GML Visual story text
GMStdSpeed_Story_10,Add ${speed} to vertical speed on ${applyto},在${applyto}上添加${speed}为垂直速度,,GML Visual story text
GMStdSpeed_Story_11,Set vertical speed to ${speed},设置垂直速度为${speed},,GML Visual story text
GMStdSpeed_Story_12,Set vertical speed to ${speed} on ${applyto},在${applyto}上设置垂直速度为${speed},,GML Visual story text
GMStdGravDir_Story_1,Add ${direction} to gravity direction,在重力方向上添加${方向},,GML Visual story text
GMStdGravDir_Story_2,Add ${direction} to gravity direction on ${applyto},在${applyto}的重力方向上添加${direction},,GML Visual story text
GMStdGravDir_Story_3,Set gravity direction to ${direction},设置重力方向为${direction},,GML Visual story text
GMStdGravDir_Story_4,Set gravity direction to ${direction} on ${applyto},在${applyto}上设置重力方向为${direction},,GML Visual story text
GMStdGravForce_Story_1,Add ${force} to gravity force,在重力中加入${力},,GML Visual story text
GMStdGravForce_Story_2,Add ${force} to gravity force on ${applyto},在${applyto}上添加${force}为重力,,GML Visual story text
GMStdGravForce_Story_3,Set gravity force to ${force},设置重力为${force},,GML Visual story text
GMStdGravForce_Story_4,Set gravity force to ${force} on ${applyto},在${applyto}上设置重力为${force},,GML Visual story text
GMStdReverse_Story_1,Reverse direction,反方向,,GML Visual story text
GMStdReverse_Story_2,Reverse direction on ${applyto},在${applyto}上反转方向,,GML Visual story text
GMStdReverse_Story_3,Reverse horizontal speed,反向水平速度,,GML Visual story text
GMStdReverse_Story_4,Reverse horizontal speed on ${applyto},在${applyto}上反转水平速度,,GML Visual story text
GMStdReverse_Story_5,Reverse vertical speed,反向垂直速度,,GML Visual story text
GMStdReverse_Story_6,Reverse vertical speed on ${applyto},在${applyto}上反转垂直速度,,GML Visual story text
GMStdReverse_Story_7,Reverse gravitational direction,反引力方向,,GML Visual story text
GMStdReverse_Story_8,Reverse gravitational direction on ${applyto},在${applyto}上反转引力方向,,GML Visual story text
GMStdFriction_Story_1,Add ${friction} to friction,在摩擦力中加入${摩擦力},,GML Visual story text
GMStdFriction_Story_2,Add ${friction} to friction on ${applyto},在${applyto}上添加${friction}为摩擦力,,GML Visual story text
GMStdFriction_Story_3,Set friction to ${friction},设置摩擦力为${摩擦力},,GML Visual story text
GMStdFriction_Story_4,Set friction to ${friction} on ${applyto},在${applyto}上设置摩擦力为${friction},,GML Visual story text
GMStdJumpPoint_Story_1,Jump to ${dnd_position},跳转到 ${dnd_position},,GML Visual story text
GMStdJumpPoint_Story_2,Jump to ${dnd_position} on ${applyto},跳转到${applyto}上的${dnd_position},,GML Visual story text
GMStdJumpStart_Story_1,Jump to start,跳转到开始,,GML Visual story text
GMStdJumpStart_Story_2,Jump ${applyto} to start,跳转到${applyto}开始,,GML Visual story text
GMStdSnapPos_Story_1,"Snap  to ${xsnap},${ysnap}","Snap到${xsnap},${ysnap}",,GML Visual story text
GMStdSnapPos_Story_2,"Snap ${applyto} to ${xsnap},${ysnap} on ${applyto}","将${applyto}卡入${xsnap},${ysnap}上的${applyto}",,GML Visual story text
GMStdWrapRoom_Story_1,Wrap around room,围绕房间,,GML Visual story text
GMStdWrapRoom_Story_2,Wrap ${applyto} around room on ${applyto},在${applyto}上把${applyto}绕到房间里,,GML Visual story text
GMStdIfAnyObjAt_Story_1,If any instance is overlapping self at ${dnd_position},如果有任何一个实例在${dnd_position}处与self重叠,,GML Visual story text
GMStdIfAnyObjAt_Story_2,If any instance is overlapping self at ${dnd_position} on ${applyto},如果任何实例在${applyto}上的${dnd_position}处与self重叠,,GML Visual story text
GMStdIfAnyObjAt_Story_3,If no instance is overlapping self at ${dnd_position},如果没有实例在${dnd_position}处与self重叠,,GML Visual story text
GMStdIfAnyObjAt_Story_4,If no instance is overlapping self at ${dnd_position} on ${applyto},如果在${applyto}上的${dnd_position}处没有实例与self重合,,GML Visual story text
GMStdIfObjAt_Story_1,If ${object} is overlapping self at ${dnd_position}${show_input_count},如果${object}在${dnd_position}${show_input_count}处与自己重叠,,GML Visual story text
GMStdIfObjAt_Story_2,If ${object} is overlapping self at ${dnd_position} on ${applyto}${show_input_count},如果${object}在${applyto}${dnd_position}上的${dnd_position}上与自己重叠，则${object}在${applyto}${show_input_count}上与自己重叠,,GML Visual story text
GMStdIfObjAt_Story_3,If ${object} is overlapping self at ${dnd_position} into ${target}${show_input_count},如果${object}在${dnd_position}处与自己重叠，进入${target}${show_input_count},,GML Visual story text
GMStdIfObjAt_Story_4,If ${object} is overlapping self at ${dnd_position} into ${target} on ${applyto}${show_input_count},如果${object}在${dnd_position}上将自己重叠到${target}上的${applyto}${show_input_count},,GML Visual story text
GMStdIfObjAt_Story_5,If ${object} is overlapping self at ${dnd_position} into temp ${target}${show_input_count},如果${object}在${dnd_position}处与自己重叠，进入临时${target}${show_input_count},,GML Visual story text
GMStdIfObjAt_Story_6,If ${object} is overlapping self at ${dnd_position} into temp ${target} on ${applyto}${show_input_count},如果${object}在${dnd_position}上将自己重叠到临时${target}上的${applyto}${show_input_count},,GML Visual story text
GMStdIfObjAt_Story_7,If ${object} is not overlapping self at ${dnd_position}${show_input_count},如果${object}在${dnd_position}${show_input_count}处没有与self重叠,,GML Visual story text
GMStdIfObjAt_Story_8,If ${object} is not overlapping self at ${dnd_position} on ${applyto}${show_input_count},如果${object}在${applyto}${show_input_count}上的${dnd_position}处没有与自己重叠,,GML Visual story text
GMStdIfObjAt_Story_9,If ${object} is not overlapping self at ${dnd_position} into ${target}${show_input_count},如果${object}在${dnd_position}处没有与self重叠，则进入${target}${show_input_count},,GML Visual story text
GMStdIfObjAt_Story_10,If ${object} is not overlapping self at ${dnd_position} into ${target} on ${applyto}${show_input_count},如果${object}在${dnd_position}没有将自己重叠到${target}的${applyto}${show_input_count}上,,GML Visual story text
GMStdIfObjAt_Story_11,If ${object} is not overlapping self at ${dnd_position} into temp ${target}${show_input_count},如果${object}在${dnd_position}处没有与self重叠，则进入临时${target}${show_input_count},,GML Visual story text
GMStdIfObjAt_Story_12,If ${object} is not overlapping self at ${dnd_position} into temp ${target} on ${applyto}${show_input_count},如果${object}在${dnd_position}处没有将自己重叠到临时${target}上，则${applyto}${show_input_count},,GML Visual story text
GMStdIfColShape_Story_1,If ${obj} intersects line at ${dnd_position1} to ${dnd_position2},如果${obj}与${dnd_position1}到${dnd_position2}的线相交,,GML Visual story text
GMStdIfColShape_Story_2,If ${obj} intersects line at ${dnd_position1} to ${dnd_position2} on ${applyto},如果${obj}与${dnd_position1}到${dnd_position2}的线相交于${applyto},,GML Visual story text
GMStdIfColShape_Story_3,If ${obj} intersects line at ${dnd_position1} to ${dnd_position2} into list ${target},如果${obj}在${dnd_position1}处与${dnd_position2}相交，进入列表${target},,GML Visual story text
GMStdIfColShape_Story_4,If ${obj} intersects line at ${dnd_position1} to ${dnd_position2} into list ${target} on ${applyto},如果${obj}在${dnd_position1}处与${dnd_position2}相交，则在${applyto}上将${target}放入列表中,,GML Visual story text
GMStdIfColShape_Story_5,If ${obj} intersects line at ${dnd_position1} to ${dnd_position2} into list temp ${target},如果${obj}在${dnd_position1}与${dnd_position2}相交，进入列表临时${target},,GML Visual story text
GMStdIfColShape_Story_6,If ${obj} intersects line at ${dnd_position1} to ${dnd_position2} into list temp ${target} on ${applyto},如果${obj}在${dnd_position1}与${dnd_position2}相交，进入列表临时${target}上的${applyto},,GML Visual story text
GMStdIfColShape_Story_7,If ${obj} intersects line at ${dnd_position1} to ${dnd_position2} into ${target},如果${obj}在${dnd_position1}与${dnd_position2}相交，进入${target},,GML Visual story text
GMStdIfColShape_Story_8,If ${obj} intersects line at ${dnd_position1} to ${dnd_position2} into ${target} on ${applyto},如果${obj}在${dnd_position1}与${dnd_position2}相交，进入${target}的${applyto},,GML Visual story text
GMStdIfColShape_Story_9,If ${obj} intersects line at ${dnd_position1} to ${dnd_position2} into temp ${target},如果${obj}在${dnd_position1}与${dnd_position2}相交，进入临时${target},,GML Visual story text
GMStdIfColShape_Story_10,If ${obj} intersects line at ${dnd_position1} to ${dnd_position2} into temp ${target} on ${applyto},如果${obj}在${dnd_position1}与${dnd_position2}相交，进入临时${target}的${applyto},,GML Visual story text
GMStdIfColShape_Story_11,If ${obj} intersects rectangle at ${dnd_position1} to ${dnd_position2},如果${obj}与${dnd_position1}至${dnd_position2}处的矩形相交,,GML Visual story text
GMStdIfColShape_Story_12,If ${obj} intersects rectangle at ${dnd_position1} to ${dnd_position2} on ${applyto},如果${obj}在${dnd_position1}与${dnd_position2}相交于${applyto}上的矩形,,GML Visual story text
GMStdIfColShape_Story_13,If ${obj} intersects rectangle at ${dnd_position1} to ${dnd_position2} into list ${target},如果${obj}与${dnd_position1}处的矩形相交，则${dnd_position2}进入列表${target},,GML Visual story text
GMStdIfColShape_Story_14,If ${obj} intersects rectangle at ${dnd_position1} to ${dnd_position2} into list ${target} on ${applyto},如果${obj}与${dnd_position1}处的矩形相交，则${dnd_position2}进入列表${target}上的${applyto},,GML Visual story text
GMStdIfColShape_Story_15,If ${obj} intersects rectangle at ${dnd_position1} to ${dnd_position2} into list temp ${target},如果${obj}与${dnd_position1}处的矩形相交，将${dnd_position2}放入列表临时${target},,GML Visual story text
GMStdIfColShape_Story_16,If ${obj} intersects rectangle at ${dnd_position1} to ${dnd_position2} into list temp ${target} on ${applyto},如果${obj}与${dnd_position1}处的矩形相交，到${dnd_position2}进入列表临时${target}上的${applyto},,GML Visual story text
GMStdIfColShape_Story_17,If ${obj} intersects rectangle at ${dnd_position1} to ${dnd_position2} into ${target},如果${obj}与${dnd_position1}处的矩形相交，到${dnd_position2}处变成${target},,GML Visual story text
GMStdIfColShape_Story_18,If ${obj} intersects rectangle at ${dnd_position1} to ${dnd_position2} into ${target} on ${applyto},如果${obj}在${dnd_position1}与${dnd_position2}的矩形相交，进入${target}的${applyto},,GML Visual story text
GMStdIfColShape_Story_19,If ${obj} intersects rectangle at ${dnd_position1} to ${dnd_position2} into temp ${target},如果${obj}与${dnd_position1}处的矩形相交，到${dnd_position2}进入临时${target},,GML Visual story text
GMStdIfColShape_Story_20,If ${obj} intersects rectangle at ${dnd_position1} to ${dnd_position2} into temp ${target} on ${applyto},如果${obj}在${dnd_position1}与${dnd_position2}的矩形相交，进入${applyto}的临时${target},,GML Visual story text
GMStdIfColShape_Story_21,If ${obj} intersects ellipse at ${dnd_position1} to ${dnd_position2},如果${obj}与椭圆相交于${dnd_position1}至${dnd_position2},,GML Visual story text
GMStdIfColShape_Story_22,If ${obj} intersects ellipse at ${dnd_position1} to ${dnd_position2} on ${applyto},如果${obj}在${dnd_position1}与${dnd_position2}的椭圆相交于${applyto},,GML Visual story text
GMStdIfColShape_Story_23,If ${obj} intersects ellipse at ${dnd_position1} to ${dnd_position2} into list ${target},如果${obj}与${dnd_position1}处的椭圆相交，则${dnd_position2}进入列表${target},,GML Visual story text
GMStdIfColShape_Story_24,If ${obj} intersects ellipse at ${dnd_position1} to ${dnd_position2} into list ${target} on ${applyto},如果${obj}与${dnd_position1}处的椭圆相交，将${dnd_position2}放入${applyto}上的列表${target},,GML Visual story text
GMStdIfColShape_Story_25,If ${obj} intersects ellipse at ${dnd_position1} to ${dnd_position2} into list temp ${target},如果${obj}与${dnd_position1}处的椭圆相交，则${dnd_position2}进入列表临时${target},,GML Visual story text
GMStdIfColShape_Story_26,If ${obj} intersects ellipse at ${dnd_position1} to ${dnd_position2} into list temp ${target} on ${applyto},如果${obj}与${dnd_position1}处的椭圆相交，到${dnd_position2}处，放入${applyto}上的 list temp ${target},,GML Visual story text
GMStdIfColShape_Story_27,If ${obj} intersects ellipse at ${dnd_position1} to ${dnd_position2} into ${target},如果${obj}与${dnd_position1}处的椭圆相交，到${dnd_position2}处变成${target},,GML Visual story text
GMStdIfColShape_Story_28,If ${obj} intersects ellipse at ${dnd_position1} to ${dnd_position2} into ${target} on ${applyto},如果${obj}在${dnd_position1}与${dnd_position2}的椭圆相交，进入${target}的${applyto},,GML Visual story text
GMStdIfColShape_Story_29,If ${obj} intersects ellipse at ${dnd_position1} to ${dnd_position2} into temp ${target},如果${obj}与${dnd_position1}处的椭圆相交，到${dnd_position2}处进入临时${target},,GML Visual story text
GMStdIfColShape_Story_30,If ${obj} intersects ellipse at ${dnd_position1} to ${dnd_position2} into temp ${target} on ${applyto},如果${obj}与${dnd_position1}处的椭圆相交，到${dnd_position2}进入临时${target}，在${applyto}上,,GML Visual story text
GMStdIfColShape_Story_31,If not ${obj} intersects line at ${dnd_position1} to ${dnd_position2},如果${obj}没有与${dnd_position1}到${dnd_position2}的线相交，则说明${obj}与${dnd_position1}相交,,GML Visual story text
GMStdIfColShape_Story_32,If not ${obj} intersects line at ${dnd_position1} to ${dnd_position2} on ${applyto},如果${obj}没有在${applyto}上与${dnd_position1}到${dnd_position2}的线相交,,GML Visual story text
GMStdIfColShape_Story_33,If not ${obj} intersects line at ${dnd_position1} to ${dnd_position2} into list ${target},如果不是${obj}与${dnd_position1}到${dnd_position2}的线相交，则将${target}放入列表中,,GML Visual story text
GMStdIfColShape_Story_34,If not ${obj} intersects line at ${dnd_position1} to ${dnd_position2} into list ${target} on ${applyto},如果${obj}与${dnd_position1}到${dnd_position2}的线相交，则在${applyto}上将${target}放入列表中,,GML Visual story text
GMStdIfColShape_Story_35,If not ${obj} intersects line at ${dnd_position1} to ${dnd_position2} into list temp ${target},如果不是${obj}与${dnd_position1}到${dnd_position2}的线相交，则将${target}放入 list temp,,GML Visual story text
GMStdIfColShape_Story_36,If not ${obj} intersects line at ${dnd_position1} to ${dnd_position2} into list temp ${target} on ${applyto},如果不是${obj}与${dnd_position1}到${dnd_position2}的线相交，则在${applyto}上将${target}放入列表临时${target},,GML Visual story text
GMStdIfColShape_Story_37,If not ${obj} intersects line at ${dnd_position1} to ${dnd_position2} into ${target},如果不是${obj}与${dnd_position1}至${dnd_position2}的直线相交，则进入${target},,GML Visual story text
GMStdIfColShape_Story_38,If not ${obj} intersects line at ${dnd_position1} to ${dnd_position2} into ${target} on ${applyto},如果不是${obj}在${dnd_position1}到${dnd_position2}处与${target}相交，则在${applyto}上进入${target},,GML Visual story text
GMStdIfColShape_Story_39,If not ${obj} intersects line at ${dnd_position1} to ${dnd_position2} into temp ${target},如果不是${obj}与${dnd_position1}到${dnd_position2}的线相交，则进入临时${target},,GML Visual story text
GMStdIfColShape_Story_40,If not ${obj} intersects line at ${dnd_position1} to ${dnd_position2} into temp ${target} on ${applyto},如果${obj}没有在${dnd_position1}到${dnd_position2}的线上与${applyto}的线相交，进入临时${target},,GML Visual story text
GMStdIfColShape_Story_41,If not ${obj} intersects rectangle at ${dnd_position1} to ${dnd_position2},如果${obj}没有与${dnd_position1}到${dnd_position2}的矩形相交，那么${obj}的位置就是${dnd_position1},,GML Visual story text
GMStdIfColShape_Story_42,If not ${obj} intersects rectangle at ${dnd_position1} to ${dnd_position2} on ${applyto},如果不是${obj}与${dnd_position1}到${dnd_position2}的矩形相交于${applyto}上的${dnd_position1},,GML Visual story text
GMStdIfColShape_Story_43,If not ${obj} intersects rectangle at ${dnd_position1} to ${dnd_position2} into list ${target},如果${obj}没有与${dnd_position1}到${dnd_position2}的矩形相交，则进入列表${target},,GML Visual story text
GMStdIfColShape_Story_44,If not ${obj} intersects rectangle at ${dnd_position1} to ${dnd_position2} into list ${target} on ${applyto},如果${obj}与${dnd_position1}到${dnd_position2}的矩形相交，则将${target}放入${applyto}的列表中,,GML Visual story text
GMStdIfColShape_Story_45,If not ${obj} intersects rectangle at ${dnd_position1} to ${dnd_position2} into list temp ${target},如果不是${obj}与${dnd_position1}到${dnd_position2}的矩形相交，则将${target}放入列表中,,GML Visual story text
GMStdIfColShape_Story_46,If not ${obj} intersects rectangle at ${dnd_position1} to ${dnd_position2} into list temp ${target} on ${applyto},如果不是${obj}与${dnd_position1}到${dnd_position2}的矩形相交，则在${applyto}上将${target}放入列表临时${target},,GML Visual story text
GMStdIfColShape_Story_47,If not ${obj} intersects rectangle at ${dnd_position1} to ${dnd_position2} into ${target},如果不是${obj}与${dnd_position1}到${dnd_position2}的矩形相交，则进入${target},,GML Visual story text
GMStdIfColShape_Story_48,If not ${obj} intersects rectangle at ${dnd_position1} to ${dnd_position2} into ${target} on ${applyto},如果不是${obj}与${dnd_position1}至${dnd_position2}的矩形相交，则在${applyto}上将${target}放入${target},,GML Visual story text
GMStdIfColShape_Story_49,If not ${obj} intersects rectangle at ${dnd_position1} to ${dnd_position2} into temp ${target},如果不是${obj}与${dnd_position1}到${dnd_position2}的矩形相交，则进入临时${target},,GML Visual story text
GMStdIfColShape_Story_50,If not ${obj} intersects rectangle at ${dnd_position1} to ${dnd_position2} into temp ${target} on ${applyto},如果不是${obj}与${dnd_position1}到${dnd_position2}的矩形相交，则在${applyto}上将${target}放入临时${target},,GML Visual story text
GMStdIfColShape_Story_51,If not ${obj} intersects ellipse at ${dnd_position1} to ${dnd_position2},如果不是${obj}与${dnd_position1}至${dnd_position2}的椭圆相交，则${obj}与${dnd_position1}相交,,GML Visual story text
GMStdIfColShape_Story_52,If not ${obj} intersects ellipse at ${dnd_position1} to ${dnd_position2} on ${applyto},如果不是${obj}与${dnd_position1}到${dnd_position2}的椭圆相交于${applyto}上,,GML Visual story text
GMStdIfColShape_Story_53,If not ${obj} intersects ellipse at ${dnd_position1} to ${dnd_position2} into list ${target},如果${obj}没有与${dnd_position1}到${dnd_position2}的椭圆相交，则将${target}放入列表中,,GML Visual story text
GMStdIfColShape_Story_54,If not ${obj} intersects ellipse at ${dnd_position1} to ${dnd_position2} into list ${target} on ${applyto},如果${obj}与${dnd_position1}到${dnd_position2}处的椭圆相交，则将${target}放入${applyto}上的列表中,,GML Visual story text
GMStdIfColShape_Story_55,If not ${obj} intersects ellipse at ${dnd_position1} to ${dnd_position2} into list temp ${target},如果不是${obj}与${dnd_position1}到${dnd_position2}处的椭圆相交，则将${target}放入 list temp中,,GML Visual story text
GMStdIfColShape_Story_56,If not ${obj} intersects ellipse at ${dnd_position1} to ${dnd_position2} into list temp ${target} on ${applyto},如果不是${obj}在${dnd_position1}到${dnd_position2}处与椭圆相交，则在${applyto}上将${target}放入列表暂存${target},,GML Visual story text
GMStdIfColShape_Story_57,If not ${obj} intersects ellipse at ${dnd_position1} to ${dnd_position2} into ${target},如果不是${obj}与${dnd_position1}至${dnd_position2}的椭圆相交，则进入${target},,GML Visual story text
GMStdIfColShape_Story_58,If not ${obj} intersects ellipse at ${dnd_position1} to ${dnd_position2} into ${target} on ${applyto},如果不是${obj}与${dnd_position1}至${dnd_position2}的椭圆相交，则在${applyto}上进入${target},,GML Visual story text
GMStdIfColShape_Story_59,If not ${obj} intersects ellipse at ${dnd_position1} to ${dnd_position2} into temp ${target},如果不是${obj}与${dnd_position1}到${dnd_position2}的椭圆相交，则进入临时${target},,GML Visual story text
GMStdIfColShape_Story_60,If not ${obj} intersects ellipse at ${dnd_position1} to ${dnd_position2} into temp ${target} on ${applyto},如果不是${obj}与${dnd_position1}至${dnd_position2}处的椭圆相交，则在${applyto}上将${target}放入临时${target},,GML Visual story text
GMStdIfColPoint_Story_1,If ${obj} intersects point ${dnd_position},如果${obj}与点${dnd_position}相交,,GML Visual story text
GMStdIfColPoint_Story_2,If ${obj} intersects point ${dnd_position} on ${applyto},如果${obj}在${applyto}上与点${dnd_position}相交,,GML Visual story text
GMStdIfColPoint_Story_3,If ${obj} intersects point ${dnd_position} into list ${target},如果${obj}与点${dnd_position}相交，进入列表${target},,GML Visual story text
GMStdIfColPoint_Story_4,If ${obj} intersects point ${dnd_position} into list ${target} on ${applyto},如果${obj}在${applyto}上与点${dnd_position}相交，进入列表${target},,GML Visual story text
GMStdIfColPoint_Story_5,If ${obj} intersects point ${dnd_position} into list temp ${target},如果${obj}与点${dnd_position}相交，进入列表临时${target},,GML Visual story text
GMStdIfColPoint_Story_6,If ${obj} intersects point ${dnd_position} into list temp ${target} on ${applyto},如果${obj}在${applyto}上与点${dnd_position}相交，进入列表临时点${target},,GML Visual story text
GMStdIfColPoint_Story_7,If ${obj} intersects point ${dnd_position} into ${target},如果${obj}与点${dnd_position}相交，进入${target},,GML Visual story text
GMStdIfColPoint_Story_8,If ${obj} intersects point ${dnd_position} into ${target} on ${applyto},如果${obj}在${applyto}上与点${dnd_position}交于${target},,GML Visual story text
GMStdIfColPoint_Story_9,If ${obj} intersects point ${dnd_position} into temp ${target},如果${obj}与点${dnd_position}相交，进入临时点${target},,GML Visual story text
GMStdIfColPoint_Story_10,If ${obj} intersects point ${dnd_position} into temp ${target} on ${applyto},如果${obj}在${applyto}上与点${dnd_position}交于临时点${target},,GML Visual story text
GMStdIfColPoint_Story_11,If not ${obj} intersects point ${dnd_position},如果不是${obj}与点${dnd_position}相交，则${obj}与${dnd_position}相交,,GML Visual story text
GMStdIfColPoint_Story_12,If not ${obj} intersects point ${dnd_position} on ${applyto},如果${obj}与${applyto}上的点${dnd_position}不相交，则${obj}与${applyto}相交,,GML Visual story text
GMStdIfColPoint_Story_13,If not ${obj} intersects point ${dnd_position} into list ${target},如果不是${obj}与点${dnd_position}相交，则进入列表${target},,GML Visual story text
GMStdIfColPoint_Story_14,If not ${obj} intersects point ${dnd_position} into list ${target} on ${applyto},如果${obj}没有在${applyto}上与点${dnd_position}相交，进入列表${target},,GML Visual story text
GMStdIfColPoint_Story_15,If not ${obj} intersects point ${dnd_position} into list temp ${target},如果不是 ${obj} 与点 ${dnd_position} 相交，则将其放入 list temp ${target},,GML Visual story text
GMStdIfColPoint_Story_16,If not ${obj} intersects point ${dnd_position} into list temp ${target} on ${applyto},如果${obj}没有在${applyto}上与点${dnd_position}相交，进入列表临时点${target},,GML Visual story text
GMStdIfColPoint_Story_17,If not ${obj} intersects point ${dnd_position} into ${target},如果不是${obj}与点${dnd_position}相交，则进入${target},,GML Visual story text
GMStdIfColPoint_Story_18,If not ${obj} intersects point ${dnd_position} into ${target} on ${applyto},如果不是${obj}在${applyto}上与点${dnd_position}相交于${target},,GML Visual story text
GMStdIfColPoint_Story_19,If not ${obj} intersects point ${dnd_position} into temp ${target},如果不是${obj}与点${dnd_position}相交，则进入临时点${target},,GML Visual story text
GMStdIfColPoint_Story_20,If not ${obj} intersects point ${dnd_position} into temp ${target} on ${applyto},如果不是${obj}在${applyto}上与点${dnd_position}相交于临时点${target},,GML Visual story text
GMStdDrawSelf_Story_1,Draw self,绘制自身,,GML Visual story text
GMStdDrawSelf_Story_2,Draw self on ${applyto},在${applyto}上绘制自身,,GML Visual story text
GMStdDrawValue_Story_1,Draw  at ${dnd_position},在${dnd_position}处画图,,GML Visual story text
GMStdDrawValue_Story_2,Draw  at ${dnd_position} on ${applyto},在${applyto}上的${dnd_position}处画图,,GML Visual story text
GMStdDrawValue_Story_3,Draw  ${var} at ${dnd_position},在${dnd_position}处绘制${var},,GML Visual story text
GMStdDrawValue_Story_4,Draw  ${var} at ${dnd_position} on ${applyto},在${applyto}上的${dnd_position}处绘制${var},,GML Visual story text
GMStdDrawValue_Story_5,"Draw "${caption}" at ${dnd_position}","在 ${dnd_position} 处绘制 "${caption}"",,GML Visual story text
GMStdDrawValue_Story_6,"Draw "${caption}" at ${dnd_position} on ${applyto}","在 ${applyto} 上的 ${dnd_position} 处绘制 "${caption}"",,GML Visual story text
GMStdDrawValue_Story_7,"Draw "${caption}" ${var} at ${dnd_position}","在 ${dnd_position} 处绘制 "${caption}" ${var}",,GML Visual story text
GMStdDrawValue_Story_8,"Draw "${caption}" ${var} at ${dnd_position} on ${applyto}","在 ${applyto} 上的 ${dnd_position} 处绘制 "${caption}" ${var}",,GML Visual story text
GMStdDrawValueTransformed_Story_1,Draw transformed  at ${dnd_position},在${dnd_position}处绘制变形图,,GML Visual story text
GMStdDrawValueTransformed_Story_2,Draw transformed  at ${dnd_position} on ${applyto},在${applyto}上的${dnd_position}处绘制变形图,,GML Visual story text
GMStdDrawValueTransformed_Story_3,Draw transformed  ${var} at ${dnd_position},在${dnd_position}处绘制变换后的${var},,GML Visual story text
GMStdDrawValueTransformed_Story_4,Draw transformed  ${var} at ${dnd_position} on ${applyto},在${applyto}上的${dnd_position}处绘制变换后的${var},,GML Visual story text
GMStdDrawValueTransformed_Story_5,"Draw transformed "${caption}" at ${dnd_position}","在 ${dnd_position} 处绘制转换的 "${caption}"",,GML Visual story text
GMStdDrawValueTransformed_Story_6,"Draw transformed "${caption}" at ${dnd_position} on ${applyto}","在 ${applyto} 上的 ${dnd_position} 处绘制转换的 "${caption}"",,GML Visual story text
GMStdDrawValueTransformed_Story_7,"Draw transformed "${caption}" ${var} at ${dnd_position}","在 ${dnd_position} 处绘制转换的 "${caption}" ${var}",,GML Visual story text
GMStdDrawValueTransformed_Story_8,"Draw transformed "${caption}" ${var} at ${dnd_position} on ${applyto}","在 ${applyto} 上的 ${dnd_position} 处绘制转换的 "${caption}" ${var}",,GML Visual story text
GMStdDrawSprite_Story_1,Draw sprite ${sprite} frame ${image} at ${dnd_position},在${dnd_position}处绘制精灵${sprite}帧${image},,GML Visual story text
GMStdDrawSprite_Story_2,Draw sprite ${sprite} frame ${image} at ${dnd_position} on ${applyto},在${applyto}上的${dnd_position}处绘制精灵${sprite}帧${image},,GML Visual story text
GMStdDrawSpriteExt_Story_1,"Draw transformed sprite ${sprite} frame ${frame} with scale ${xscale},${yscale} and rotation ${rot}","绘制变换后的精灵${sprite}帧${frame}，并使用缩放${xscale},${yscale}和旋转${rot}",,GML Visual story text
GMStdDrawSpriteExt_Story_2,"Draw transformed sprite ${sprite} frame ${frame} with scale ${xscale},${yscale} and rotation ${rot} on ${applyto}","在${applyto}上绘制变换后的精灵${sprite}帧${frame}，并在${xscale},${yscale}上进行缩放${xscale}和旋转${rot}",,GML Visual story text
GMStdDrawSpritesStacked_Story_1,Draw sprite ${sprite} in ${number} rows at ${dnd_position},在${number}行的${dnd_position}处绘制精灵${sprite},,GML Visual story text
GMStdDrawSpritesStacked_Story_2,Draw sprite ${sprite} in ${number} rows at ${dnd_position} on ${applyto},在${applyto}上的${number}行的${dnd_position}处绘制精灵${sprite},,GML Visual story text
GMStdDrawSpritesStacked_Story_3,Draw sprite ${sprite} in ${number} columns at ${dnd_position},在${number}列的${dnd_position}处绘制精灵${sprite},,GML Visual story text
GMStdDrawSpritesStacked_Story_4,Draw sprite ${sprite} in ${number} columns at ${dnd_position} on ${applyto},在${applyto}的${number}列的${dnd_position}处绘制精灵${sprite},,GML Visual story text
GMStdDrawRectangle_Story_1,Draw rectangle from ${dnd_position1} to ${dnd_position2},从${dnd_position1}到${dnd_position2}画一个矩形,,GML Visual story text
GMStdDrawRectangle_Story_2,Draw rectangle from ${dnd_position1} to ${dnd_position2} on ${applyto},在${applyto}上从${dnd_position1}到${dnd_position2}画一个矩形,,GML Visual story text
GMStdDrawGradientRect_Story_1,Draw gradient rectangular outline from ${dnd_position1} to ${dnd_position2},从${dnd_position1}到${dnd_position2}画出渐变的矩形轮廓,,GML Visual story text
GMStdDrawGradientRect_Story_2,Draw gradient rectangular outline from ${dnd_position1} to ${dnd_position2} on ${applyto},在${applyto}上绘制从${dnd_position1}到${dnd_position2}的渐变矩形轮廓,,GML Visual story text
GMStdDrawGradientRect_Story_3,Draw gradient rectangle from ${dnd_position1} to ${dnd_position2},绘制从${dnd_position1}到${dnd_position2}的渐变矩形,,GML Visual story text
GMStdDrawGradientRect_Story_4,Draw gradient rectangle from ${dnd_position1} to ${dnd_position2} on ${applyto},在${applyto}上绘制从${dnd_position1}到${dnd_position2}的渐变矩形,,GML Visual story text
GMStdDrawEllipse_Story_1,Draw ellipse from ${dnd_position1} to ${dnd_position2},从${dnd_position1}到${dnd_position2}画一个椭圆,,GML Visual story text
GMStdDrawEllipse_Story_2,Draw ellipse from ${dnd_position1} to ${dnd_position2} on ${applyto},在${applyto}上从${dnd_position1}到${dnd_position2}画一个椭圆,,GML Visual story text
GMStdDrawGradientEllipse_Story_1,Draw gradient elliptical outline from ${dnd_position1} to ${dnd_position2},从${dnd_position1}到${dnd_position2}画出渐变的椭圆轮廓,,GML Visual story text
GMStdDrawGradientEllipse_Story_2,Draw gradient elliptical outline from ${dnd_position1} to ${dnd_position2} on ${applyto},在${applyto}上绘制从${dnd_position1}到${dnd_position2}的渐变椭圆轮廓,,GML Visual story text
GMStdDrawGradientEllipse_Story_3,Draw gradient ellipse from ${dnd_position1} to ${dnd_position2},绘制从${dnd_position1}到${dnd_position2}的梯度椭圆,,GML Visual story text
GMStdDrawGradientEllipse_Story_4,Draw gradient ellipse from ${dnd_position1} to ${dnd_position2} on ${applyto},在${applyto}上绘制从${dnd_position1}到${dnd_position2}的梯度椭圆,,GML Visual story text
GMStdDrawLine_Story_1,Draw line from ${dnd_position1} to ${dnd_position2},从${dnd_position1}画线到${dnd_position2},,GML Visual story text
GMStdDrawLine_Story_2,Draw line from ${dnd_position1} to ${dnd_position2} on ${applyto},在${applyto}上从${dnd_position1}画线到${dnd_position2},,GML Visual story text
GMStdDrawHealthbar_Story_1,Draw healthbar from ${dnd_position1} to ${dnd_position2} with value ${value},从${dnd_position1}到${dnd_position2}绘制健康条，数值为${value},,GML Visual story text
GMStdDrawHealthbar_Story_2,Draw healthbar from ${dnd_position1} to ${dnd_position2} with value ${value} on ${applyto},在${applyto}上从${dnd_position1}到${dnd_position2}画出健康条，数值为${value},,GML Visual story text
GMStdDrawInstanceScore_Story_1,Draw score at ${dnd_position},在${dnd_position}处抽取分数,,GML Visual story text
GMStdDrawInstanceScore_Story_2,"Draw score at ${dnd_position} with caption "${caption}"","在标题为 "${caption}" 的 ${dnd_position} 处绘制分数",,GML Visual story text
GMStdDrawInstanceScore_Story_3,Draw ${applyto}'s score at ${dnd_position} on ${applyto},在${applyto}的${dnd_position}处抽出${applyto}的分数,,GML Visual story text
GMStdDrawInstanceScore_Story_4,"Draw ${applyto}'s score at ${dnd_position} with caption "${caption}" on ${applyto}","在 ${applyto} 上标题为 "${caption}" 的 ${dnd_position} 处绘制 ${applyto} 的分数",,GML Visual story text
GMStdDrawInstanceHealth_Story_1,Draw healthbar from ${dnd_position1} to ${dnd_position2},将健康条从${dnd_position1}画到${dnd_position2},,GML Visual story text
GMStdDrawInstanceHealth_Story_2,Draw ${applyto}'s healthbar from ${dnd_position1} to ${dnd_position2} on ${applyto},将${applyto}的健康条从${dnd_position1}画到${dnd_position2}上,,GML Visual story text
GMStdDrawInstanceLives_Story_1,Draw lives in a row at ${dnd_position},在${dnd_position}处画一排生命,,GML Visual story text
GMStdDrawInstanceLives_Story_2,Draw lives in a column at ${dnd_position},在${dnd_position}列中画出生命值,,GML Visual story text
GMStdDrawInstanceLives_Story_3,Draw ${applyto}'s lives in a row at ${dnd_position} on ${applyto},在${applyto}上的${dnd_position}处，把${applyto}的生命画成一排,,GML Visual story text
GMStdDrawInstanceLives_Story_4,Draw ${applyto}'s lives in a column at ${dnd_position} on ${applyto},在${applyto}上${dnd_position}的一列中画出${applyto}的生命,,GML Visual story text
GMStdSetColor_Story_1,Set draw color to ${color},设置绘图颜色为${color},,GML Visual story text
GMStdSetColor_Story_2,Set draw color to ${color} on ${applyto},在${applyto}上设置绘制颜色为${color},,GML Visual story text
GMStdGetColor_Story_1,Get draw color into ${var},获取绘制颜色到${var},,GML Visual story text
GMStdGetColor_Story_2,Get draw color into ${var} on ${applyto},在${applyto}上获取绘制颜色到${var},,GML Visual story text
GMStdAlpha_Story_1,Set drawing alpha channel to ${alpha},设置绘图alpha通道为${alpha},,GML Visual story text
GMStdAlpha_Story_2,Set drawing alpha channel to ${alpha} on ${applyto},在${applyto}上设置绘图alpha通道为${alpha},,GML Visual story text
GMStdGetAlpha_Story_1,Get drawing alpha channel into ${var},获取alpha通道到${var},,GML Visual story text
GMStdGetAlpha_Story_2,Get drawing alpha channel into ${var} on ${applyto},在${applyto}上获取alpha通道到${var},,GML Visual story text
GMStdSetFont_Story_1,Set font to ${font},设置字体为${font},,GML Visual story text
GMStdSetFont_Story_2,Set font to ${font} on ${applyto},在${applyto}上设置字体为${font},,GML Visual story text
GMStdGetFont_Story_1,Get draw font into ${var},获取绘制字体到${var},,GML Visual story text
GMStdGetFont_Story_2,Get draw font into ${var} on ${applyto},在${applyto}上获取绘制字体到${var},,GML Visual story text
GMStdSetAlignment_Story_1,Set text alignment to ${halign} and ${valign},将文本对齐方式设置为${halign}和${valign},,GML Visual story text
GMStdSetAlignment_Story_2,Set text alignment to ${halign} and ${valign} on ${applyto},在${applyto}上将文本对齐方式设置为${halign}和${valign},,GML Visual story text
GMStdGetTextAlign_Story_1,Get horizontal text alignment into ${var},获取水平文本对齐方式到${var},,GML Visual story text
GMStdGetTextAlign_Story_2,Get horizontal text alignment into ${var} on ${applyto},在${applyto}上获取水平文本对齐方式到${var},,GML Visual story text
GMStdGetTextAlign_Story_3,Get vertical text alignment into ${var},在${var}中获取垂直文本对齐方式,,GML Visual story text
GMStdGetTextAlign_Story_4,Get vertical text alignment into ${var} on ${applyto},在${applyto}上获取垂直文本对齐方式到${var},,GML Visual story text
GMStdTileSetAtPixel_Story_1,Set tile on layer ${layername} at ${dnd_position} to ${tile},将图层${layername}的${dnd_position}处的砖块设置为${tile},,GML Visual story text
GMStdTileSetAtPixel_Story_2,Set tile on layer ${layername} at ${dnd_position} to ${tile} on ${applyto},在${applyto}上，将图层${layername}的${dnd_position}设置为${tile},,GML Visual story text
GMStdTileGetAtPixel_Story_1,Get tile index at ${dnd_position} on layer ${layername} into ${var},将层上${dnd_position}处的指数${layername}放入${var},,GML Visual story text
GMStdTileGetAtPixel_Story_2,Get tile index at ${dnd_position} on layer ${layername} into ${var} on ${applyto},在${applyto}上获取${dnd_position}层上${layername}的磁贴砖块到${var},,GML Visual story text
GMStdTileGetAtPixel_Story_3,Get tile index at ${dnd_position} on layer ${layername} into temp ${var},将层上${layername}的${dnd_position}的砖块放入临时${var}中,,GML Visual story text
GMStdTileGetAtPixel_Story_4,Get tile index at ${dnd_position} on layer ${layername} into temp ${var} on ${applyto},将层上${dnd_position}的砖块${layername}放入${applyto}的临时${var}中,,GML Visual story text
GMStdTileSetInCell_Story_1,"Set tile on layer ${layername} in cell ${x},${y} to ${tile}","在单元格${x},${y}中设置图层${layername}为${tile}",,GML Visual story text
GMStdTileSetInCell_Story_2,"Set tile on layer ${layername} in cell ${x},${y} to ${tile} on ${applyto}","在${applyto}上，将单元格${x},${y}中的图层${layername}设置为${tile}",,GML Visual story text
GMStdTileGetInCell_Story_1,"Get tile index in cell ${x},${y} on layer ${layername} into ${var}","将层上${layername}单元格中的${x},${y}的砖块放入${var}",,GML Visual story text
GMStdTileGetInCell_Story_2,"Get tile index in cell ${x},${y} on layer ${layername} into ${var} on ${applyto}","在${applyto}上获取图层${x},${y}单元格中的砖块到${var}",,GML Visual story text
GMStdTileGetInCell_Story_3,"Get tile index in cell ${x},${y} on layer ${layername} into temp ${var}","将层上${layername}单元格中${x},${y}的砖块放入临时${var}中",,GML Visual story text
GMStdTileGetInCell_Story_4,"Get tile index in cell ${x},${y} on layer ${layername} into temp ${var} on ${applyto}","在${applyto}上获取图层${x},${y}单元格中的砖块到${var}中",,GML Visual story text
GMStdTileSetTileSet_Story_1,Set tile set ${tileset} on layer ${layername},在图层${layername}上设置砖块组${tileset},,GML Visual story text
GMStdTileSetTileSet_Story_2,Set tile set ${tileset} on layer ${layername} on ${applyto},在层上设置砖块组 ${tileset} 在 ${layername} 上设置 ${applyto},,GML Visual story text
GMStdTileGetVar_Story_1,Get tilemap x on layer ${layername} into ${target}${show_input_count},将图层${layername}上的贴图x放入${target}${show_input_count},,GML Visual story text
GMStdTileGetVar_Story_2,Get tilemap x on layer ${layername} into ${target} on ${applyto}${show_input_count},在${applyto}${show_input_count}上获取${layername}层上的贴图x到${target},,GML Visual story text
GMStdTileGetVar_Story_3,Get tilemap x on layer ${layername} into temp ${target}${show_input_count},将图层${layername}上的贴图x放入临时${target}${show_input_count},,GML Visual story text
GMStdTileGetVar_Story_4,Get tilemap x on layer ${layername} into temp ${target} on ${applyto}${show_input_count},在${applyto}${show_input_count}上将层上${layername}的贴图x放入临时${target}中,,GML Visual story text
GMStdTileGetVar_Story_5,Get tilemap y on layer ${layername} into ${target}${show_input_count},将图层${layername}上的平铺图y放入${target}${show_input_count},,GML Visual story text
GMStdTileGetVar_Story_6,Get tilemap y on layer ${layername} into ${target} on ${applyto}${show_input_count},在${applyto}${show_input_count}上获取${layername}层上的平铺图y到${target},,GML Visual story text
GMStdTileGetVar_Story_7,Get tilemap y on layer ${layername} into temp ${target}${show_input_count},将图层${layername}上的贴图y放入临时的${target}${show_input_count}中,,GML Visual story text
GMStdTileGetVar_Story_8,Get tilemap y on layer ${layername} into temp ${target} on ${applyto}${show_input_count},在${applyto}${show_input_count}上将图层${layername}上的贴图y放入临时${target},,GML Visual story text
GMStdTileGetVar_Story_9,Get tilemap width on layer ${layername} into ${target}${show_input_count},将图层${layername}的平铺图宽度输入${target}${show_input_count},,GML Visual story text
GMStdTileGetVar_Story_10,Get tilemap width on layer ${layername} into ${target} on ${applyto}${show_input_count},在${applyto}${show_input_count}上获取${layername}图层的平铺图宽度到${target},,GML Visual story text
GMStdTileGetVar_Story_11,Get tilemap width on layer ${layername} into temp ${target}${show_input_count},将图层${layername}上的平铺图宽度输入临时${target}${show_input_count},,GML Visual story text
GMStdTileGetVar_Story_12,Get tilemap width on layer ${layername} into temp ${target} on ${applyto}${show_input_count},在${applyto}${show_input_count}上获取图层${layername}的贴图宽度到临时${target},,GML Visual story text
GMStdTileGetVar_Story_13,Get tilemap height on layer ${layername} into ${target}${show_input_count},将图层${layername}的平铺图高度输入到${target}${show_input_count}中,,GML Visual story text
GMStdTileGetVar_Story_14,Get tilemap height on layer ${layername} into ${target} on ${applyto}${show_input_count},在${applyto}${show_input_count}上获取${layername}图层的平铺图高度到${target},,GML Visual story text
GMStdTileGetVar_Story_15,Get tilemap height on layer ${layername} into temp ${target}${show_input_count},将图层${layername}的平铺图高度放入临时${target}${show_input_count},,GML Visual story text
GMStdTileGetVar_Story_16,Get tilemap height on layer ${layername} into temp ${target} on ${applyto}${show_input_count},在${applyto}${show_input_count}上，将图层${layername}的平铺图高度改为临时${target},,GML Visual story text
GMStdTileGetVar_Story_17,Get tilemap tile width on layer ${layername} into ${target}${show_input_count},将图层${layername}的磁贴图宽度输入${target}${show_input_count},,GML Visual story text
GMStdTileGetVar_Story_18,Get tilemap tile width on layer ${layername} into ${target} on ${applyto}${show_input_count},在${applyto}${show_input_count}上获取图层${layername}的磁贴图宽度到${target},,GML Visual story text
GMStdTileGetVar_Story_19,Get tilemap tile width on layer ${layername} into temp ${target}${show_input_count},将图层${layername}的磁贴图宽度输入到temp ${target}${show_input_count}中,,GML Visual story text
GMStdTileGetVar_Story_20,Get tilemap tile width on layer ${layername} into temp ${target} on ${applyto}${show_input_count},在${applyto}${show_input_count}上获取图层${layername}的磁贴图宽度到临时${target},,GML Visual story text
GMStdTileGetVar_Story_21,Get tilemap tile height on layer ${layername} into ${target}${show_input_count},在图层${layername}中获取平铺图高度，并将其放入${target}${show_input_count}中,,GML Visual story text
GMStdTileGetVar_Story_22,Get tilemap tile height on layer ${layername} into ${target} on ${applyto}${show_input_count},在${applyto}${show_input_count}上获取${layername}图层的平铺图高度到${target},,GML Visual story text
GMStdTileGetVar_Story_23,Get tilemap tile height on layer ${layername} into temp ${target}${show_input_count},将图层${layername}的磁贴图高度转换为临时${target}${show_input_count},,GML Visual story text
GMStdTileGetVar_Story_24,Get tilemap tile height on layer ${layername} into temp ${target} on ${applyto}${show_input_count},在${applyto}${show_input_count}上获取图层${layername}上的磁贴图高度到temp ${target},,GML Visual story text
GMStdTileGetVar_Story_25,Get tilemap resource on layer ${layername} into ${target}${show_input_count},将层上的${layername}的磁贴图资源导入${target}${show_input_count},,GML Visual story text
GMStdTileGetVar_Story_26,Get tilemap resource on layer ${layername} into ${target} on ${applyto}${show_input_count},在${applyto}${show_input_count}上获取${layername}层上的平铺图资源到${target},,GML Visual story text
GMStdTileGetVar_Story_27,Get tilemap resource on layer ${layername} into temp ${target}${show_input_count},将图层上的贴图资源${layername}放入临时的${target}${show_input_count}中,,GML Visual story text
GMStdTileGetVar_Story_28,Get tilemap resource on layer ${layername} into temp ${target} on ${applyto}${show_input_count},在${applyto}${show_input_count}上，将层上${layername}的磁贴图资源转为临时${target},,GML Visual story text
GMStdTileGetVar_Story_29,Get tilemap frame on layer ${layername} into ${target}${show_input_count},在图层${layername}上获取平铺图框架到${target}${show_input_count},,GML Visual story text
GMStdTileGetVar_Story_30,Get tilemap frame on layer ${layername} into ${target} on ${applyto}${show_input_count},在${applyto}${show_input_count}上获取${layername}层上的平铺图框架到${target},,GML Visual story text
GMStdTileGetVar_Story_31,Get tilemap frame on layer ${layername} into temp ${target}${show_input_count},将图层${layername}上的平铺图框放入临时文件${target}${show_input_count},,GML Visual story text
GMStdTileGetVar_Story_32,Get tilemap frame on layer ${layername} into temp ${target} on ${applyto}${show_input_count},在${applyto}${show_input_count}上，将图层${layername}上的平铺图框放入临时${target}中,,GML Visual story text
GMStdTileGetVar_Story_33,Get tilemap mask on layer ${layername} into ${target}${show_input_count},在图层${layername}上获取平铺图掩码，并将其放入${target}${show_input_count},,GML Visual story text
GMStdTileGetVar_Story_34,Get tilemap mask on layer ${layername} into ${target} on ${applyto}${show_input_count},在${applyto}${show_input_count}上获取${layername}图层上的平铺图掩码到${target},,GML Visual story text
GMStdTileGetVar_Story_35,Get tilemap mask on layer ${layername} into temp ${target}${show_input_count},将图层${layername}上的平铺图掩码导入临时文件${target}${show_input_count},,GML Visual story text
GMStdTileGetVar_Story_36,Get tilemap mask on layer ${layername} into temp ${target} on ${applyto}${show_input_count},在${applyto}${show_input_count}上获取图层${layername}的贴图掩码到临时${target},,GML Visual story text
GMStdTileGetVar_Story_37,Get tilemap global mask on layer ${layername} into ${target}${show_input_count},将全局蒙版图中的${layername}放入${target}${show_input_count},,GML Visual story text
GMStdTileGetVar_Story_38,Get tilemap global mask on layer ${layername} into ${target} on ${applyto}${show_input_count},在${applyto}${show_input_count}上获取${layername}图层上的全局蒙版图到${target},,GML Visual story text
GMStdTileGetVar_Story_39,Get tilemap global mask on layer ${layername} into temp ${target}${show_input_count},将全局蒙版图中的${layername}放入临时${target}${show_input_count},,GML Visual story text
GMStdTileGetVar_Story_40,Get tilemap global mask on layer ${layername} into temp ${target} on ${applyto}${show_input_count},在${applyto}${show_input_count}上获取${layername}层上的全局蒙版图到临时${target},,GML Visual story text
GMStdTileSetElmPixel_Story_1,Set tile data at ${dnd_position} on layer ${layername} to ${element},在图层${layername}的${dnd_position}处设置砖块数据为${元素},,GML Visual story text
GMStdTileSetElmPixel_Story_2,Set tile data at ${dnd_position} on layer ${layername} to ${element} on ${applyto},在${applyto}上将图层${dnd_position}的数据设置为${element},,GML Visual story text
GMStdTileGetElmPixel_Story_1,Get tile data at ${dnd_position} on layer ${layername} into ${var},将层上${dnd_position}处的${layername}的砖块数据导入${var},,GML Visual story text
GMStdTileGetElmPixel_Story_2,Get tile data at ${dnd_position} on layer ${layername} into ${var} on ${applyto},在${applyto}上获取${dnd_position}层上${layername}处的砖块数据到${var},,GML Visual story text
GMStdTileGetElmPixel_Story_3,Get tile data at ${dnd_position} on layer ${layername} into temp ${var},将层上${dnd_position}处的${layername}的磁贴数据导入临时${var},,GML Visual story text
GMStdTileGetElmPixel_Story_4,Get tile data at ${dnd_position} on layer ${layername} into temp ${var} on ${applyto},在${applyto}上，将层上${dnd_position}处的砖块数据导入临时${var},,GML Visual story text
GMStdTileSetElm_Story_1,"Set tile data in cell ${x},${y} on layer ${layername} to ${element}","将图层${layername}单元格中的${x},${y}设置为${element}",,GML Visual story text
GMStdTileSetElm_Story_2,"Set tile data in cell ${x},${y} on layer ${layername} to ${element} on ${applyto}","在${applyto}上将图层${x},${y}单元格中的数据设置为${element}",,GML Visual story text
GMStdTileGetElm_Story_1,"Get tile data in cell ${x},${y} on layer ${layername} into ${var}","将图层${layername}中${x},${y}单元格中的磁贴数据导入${var}",,GML Visual story text
GMStdTileGetElm_Story_2,"Get tile data in cell ${x},${y} on layer ${layername} into ${var} on ${applyto}","在${applyto}上获取图层${x},${y}单元格中的砖块数据到${var}中",,GML Visual story text
GMStdTileGetElm_Story_3,"Get tile data in cell ${x},${y} on layer ${layername} into temp ${var}","将层上${layername}中${x},${y}单元格中的磁贴数据导入临时${var}中",,GML Visual story text
GMStdTileGetElm_Story_4,"Get tile data in cell ${x},${y} on layer ${layername} into temp ${var} on ${applyto}","在${applyto}上获取图层${x},${y}单元格中的砖块数据到${var}中",,GML Visual story text
GMStdTileTransform_Story_1,Flip tile data ${tile},翻转数据 ${tile},,GML Visual story text
GMStdTileTransform_Story_2,Flip tile data ${tile} on ${applyto},在${applyto}上翻转数据${tile},,GML Visual story text
GMStdTileTransform_Story_3,Mirror tile data ${tile},镜像数据 ${tile},,GML Visual story text
GMStdTileTransform_Story_4,Mirror tile data ${tile} on ${applyto},在${applyto}上镜像砖块数据${tile},,GML Visual story text
GMStdTileTransform_Story_5,Rotate tile data ${tile},旋转数据 ${tile},,GML Visual story text
GMStdTileTransform_Story_6,Rotate tile data ${tile} on ${applyto},在${applyto}上旋转数据${tile},,GML Visual story text
GMStdTileGetTransform_Story_1,Get flip of tile data ${tile} into ${var},将数据${tile}翻转到${var},,GML Visual story text
GMStdTileGetTransform_Story_2,Get flip of tile data ${tile} into ${var} on ${applyto},在${applyto}上将数据${tile}翻转到${var},,GML Visual story text
GMStdTileGetTransform_Story_3,Get flip of tile data ${tile} into temp ${var},将数据${tile}翻转到临时数据${var},,GML Visual story text
GMStdTileGetTransform_Story_4,Get flip of tile data ${tile} into temp ${var} on ${applyto},在${applyto}上将数据${tile}翻转到临时数据${var},,GML Visual story text
GMStdTileGetTransform_Story_5,Get mirror of tile data ${tile} into ${var},获取数据的镜像${tile}到${var},,GML Visual story text
GMStdTileGetTransform_Story_6,Get mirror of tile data ${tile} into ${var} on ${applyto},在${applyto}上获取数据的镜像${tile}到${var},,GML Visual story text
GMStdTileGetTransform_Story_7,Get mirror of tile data ${tile} into temp ${var},获取数据的镜像 ${tile} 到临时数据 ${var},,GML Visual story text
GMStdTileGetTransform_Story_8,Get mirror of tile data ${tile} into temp ${var} on ${applyto},在${applyto}上获取镜像数据${tile}到临时数据${var},,GML Visual story text
GMStdTileGetTransform_Story_9,Get rotate of tile data ${tile} into ${var},获取数据${tile}的旋转值到${var},,GML Visual story text
GMStdTileGetTransform_Story_10,Get rotate of tile data ${tile} into ${var} on ${applyto},在${applyto}上获取数据${tile}的旋转值到${var},,GML Visual story text
GMStdTileGetTransform_Story_11,Get rotate of tile data ${tile} into temp ${var},将数据${tile}旋转到临时数据${var},,GML Visual story text
GMStdTileGetTransform_Story_12,Get rotate of tile data ${tile} into temp ${var} on ${applyto},在${applyto}上将数据${tile}旋转到临时数据${var},,GML Visual story text
GMStdPlayAudio_Story_1,Play audio ${soundid} looped and assign id to ${target},循环播放音频${soundid}并将id分配给${target},,GML Visual story text
GMStdPlayAudio_Story_2,Play audio ${soundid} looped and assign id to ${target} on ${applyto},循环播放音频${soundid}，并在${applyto}上将id分配给${target},,GML Visual story text
GMStdPlayAudio_Story_3,Play audio ${soundid} looped,播放音频 ${soundid} 循环播放,,GML Visual story text
GMStdPlayAudio_Story_4,Play audio ${soundid} looped on ${applyto},在${applyto}上循环播放音频${soundid},,GML Visual story text
GMStdPlayAudio_Story_5,Play audio ${soundid} looped and assign id to temp ${target},循环播放音频${soundid}，并将id分配给临时的${target},,GML Visual story text
GMStdPlayAudio_Story_6,Play audio ${soundid} looped and assign id to temp ${target} on ${applyto},循环播放音频${soundid}，并在${applyto}上将id分配给temp ${target},,GML Visual story text
GMStdPlayAudio_Story_7,Play audio ${soundid} and assign id to ${target},播放音频${soundid}并将id分配给${target},,GML Visual story text
GMStdPlayAudio_Story_8,Play audio ${soundid} and assign id to ${target} on ${applyto},在${applyto}上播放音频${soundid}并将id分配给${target},,GML Visual story text
GMStdPlayAudio_Story_9,Play audio ${soundid},播放音频 ${soundid},,GML Visual story text
GMStdPlayAudio_Story_10,Play audio ${soundid} on ${applyto},在${applyto}上播放音频${soundid},,GML Visual story text
GMStdPlayAudio_Story_11,Play audio ${soundid} and assign id to temp ${target},播放音频${soundid}，并将id分配给temp ${target},,GML Visual story text
GMStdPlayAudio_Story_12,Play audio ${soundid} and assign id to temp ${target} on ${applyto},在${applyto}上播放音频${soundid}并将id分配给临时${target},,GML Visual story text
GMStdStopAudio_Story_1,Stop audio ${soundid},停止音频 ${soundid},,GML Visual story text
GMStdStopAudio_Story_2,Stop audio ${soundid} on ${applyto},在${applyto}上停止音频${soundid},,GML Visual story text
GMStdStopAllAudio_Story_1,Stop all audio,停止所有音频,,GML Visual story text
GMStdStopAllAudio_Story_2,Stop all audio on ${applyto},停止${applyto}上的所有音频,,GML Visual story text
GMStdPauseAudio_Story_1,Pause audio ${sound},暂停音频 ${sound},,GML Visual story text
GMStdPauseAudio_Story_2,Pause audio ${sound} on ${applyto},在${applyto}上暂停音频${sound},,GML Visual story text
GMStdPauseAllAudio_Story_1,Pause all audio,暂停所有音频,,GML Visual story text
GMStdPauseAllAudio_Story_2,Pause all audio on ${applyto},暂停${applyto}上的所有音频,,GML Visual story text
GMStdResumeAudio_Story_1,Resume audio ${sound},恢复音频 ${sound},,GML Visual story text
GMStdResumeAudio_Story_2,Resume audio ${sound} on ${applyto},在${applyto}上恢复音频${sound},,GML Visual story text
GMStdResumeAllAudio_Story_1,Resume all audio,恢复所有音频,,GML Visual story text
GMStdResumeAllAudio_Story_2,Resume all audio on ${applyto},恢复${applyto}上的所有音频,,GML Visual story text
GMStdAudioSetPosition_Story_1,Set audio position of ${sound} to ${time} seconds,将${sound}的音频位置设置为${time}秒,,GML Visual story text
GMStdAudioSetPosition_Story_2,Set audio position of ${sound} to ${time} seconds on ${applyto},在${applyto}上将${sound}的音频位置设置为${time}秒,,GML Visual story text
GMStdAudioGetLength_Story_1,Get length of audio ${sound} into ${var},将音频的长度${sound}放入${var},,GML Visual story text
GMStdAudioGetLength_Story_2,Get length of audio ${sound} into ${var} on ${applyto},在${applyto}上获取音频${sound}的长度到${var},,GML Visual story text
GMStdAudioGetLength_Story_3,Get length of audio ${sound} into temp ${var},将音频的长度${sound}放入临时的${var}中,,GML Visual story text
GMStdAudioGetLength_Story_4,Get length of audio ${sound} into temp ${var} on ${applyto},在${applyto}上获取音频${sound}的长度到临时${var},,GML Visual story text
GMStdAudioSetPitch_Story_1,Set pitch of audio ${sound} to ${pitch},将音频的音调 ${sound} 设置为 ${pitch},,GML Visual story text
GMStdAudioSetPitch_Story_2,Set pitch of audio ${sound} to ${pitch} on ${applyto},在${applyto}上将音频${sound}的音调设置为${pitch},,GML Visual story text
GMStdAudioGetPitch_Story_1,Get pitch of audio ${sound} into ${var},将音频${sound}的音高输入${var},,GML Visual story text
GMStdAudioGetPitch_Story_2,Get pitch of audio ${sound} into ${var} on ${applyto},在${applyto}上获取音频${sound}的音高到${var},,GML Visual story text
GMStdAudioGetPitch_Story_3,Get pitch of audio ${sound} into temp ${var},将音频${sound}的音高导入临时${var}中,,GML Visual story text
GMStdAudioGetPitch_Story_4,Get pitch of audio ${sound} into temp ${var} on ${applyto},在${applyto}上获取音频${sound}的音高到临时${var},,GML Visual story text
GMStdAudioSetVolume_Story_1,Set volume of audio ${sound} to ${volume},将音频的音量 ${sound} 设置为 ${volume},,GML Visual story text
GMStdAudioSetVolume_Story_2,Set volume of audio ${sound} to ${volume} on ${applyto},在${applyto}上设置音频${sound}的音量为${volume},,GML Visual story text
GMStdAudioGetVolume_Story_1,Get volume of audio ${sound} into ${var},获取音频的音量 ${sound} 到 ${var},,GML Visual story text
GMStdAudioGetVolume_Story_2,Get volume of audio ${sound} into ${var} on ${applyto},在${applyto}上获取音频${sound}的音量到${var},,GML Visual story text
GMStdAudioGetVolume_Story_3,Get volume of audio ${sound} into temp ${var},获取音频的音量${sound}到临时的${var},,GML Visual story text
GMStdAudioGetVolume_Story_4,Get volume of audio ${sound} into temp ${var} on ${applyto},在${applyto}上获取音频${sound}的音量到临时${var},,GML Visual story text
GMStdAudoSetMasterVolume_Story_1,Set master volume to ${volume},将主卷设置为${volume},,GML Visual story text
GMStdAudoSetMasterVolume_Story_2,Set master volume to ${volume} on ${applyto},在${applyto}上将主卷设置为${volume},,GML Visual story text
GMStdAudioGetMasterVolume_Story_1,Get master volume into ${var},把主卷放到${var}中,,GML Visual story text
GMStdAudioGetMasterVolume_Story_2,Get master volume into ${var} on ${applyto},在${applyto}上获取主卷到${var},,GML Visual story text
GMStdAudioGetMasterVolume_Story_3,Get master volume into temp ${var},把主卷放到临时卷中 ${var},,GML Visual story text
GMStdAudioGetMasterVolume_Story_4,Get master volume into temp ${var} on ${applyto},在${applyto}上将主卷放入临时卷${var},,GML Visual story text
GMStdIfAudioPlaying_Story_1,If audio ${soundid} is not playing,如果没有播放音频${soundid},,GML Visual story text
GMStdIfAudioPlaying_Story_2,If audio ${soundid} is not playing on ${applyto},如果音频${soundid}没有在${applyto}上播放,,GML Visual story text
GMStdIfAudioPlaying_Story_3,If audio ${soundid} is playing,如果正在播放音频${soundid}，那么,,GML Visual story text
GMStdIfAudioPlaying_Story_4,If audio ${soundid} is playing on ${applyto},如果在${applyto}上播放音频${soundid},,GML Visual story text
GMStdIfAudioPaused_Story_1,If audio ${soundid} is not paused,如果音频${soundid}没有暂停,,GML Visual story text
GMStdIfAudioPaused_Story_2,If audio ${soundid} is not paused on ${applyto},如果音频${soundid}没有在${applyto}上暂停,,GML Visual story text
GMStdIfAudioPaused_Story_3,If audio ${soundid} is paused,如果暂停了${soundid}的音频,,GML Visual story text
GMStdIfAudioPaused_Story_4,If audio ${soundid} is paused on ${applyto},如果音频${soundid}在${applyto}上被暂停,,GML Visual story text
GMStdLoop_Story,Loop,循环,,GML Visual story text
GMStdRepeat_Story_1,Repeat ${times} times,重复${times}次,,GML Visual story text
GMStdRepeat_Story_2,Repeat ${times} times on ${applyto},在${applyto}上重复${times}次,,GML Visual story text
GMStdWhileLoop_Story_1,While ${var} is not equal to ${value},当${var}不等于${value}的时候,,GML Visual story text
GMStdWhileLoop_Story_2,While ${var} is not equal to ${value} on ${applyto},在${applyto}上，${var}不等于${value},,GML Visual story text
GMStdWhileLoop_Story_3,While ${var} is not less than ${value},当${var}不小于${value}时,,GML Visual story text
GMStdWhileLoop_Story_4,While ${var} is not less than ${value} on ${applyto},当${var}不小于${value}时，${applyto}上的${var}不小于${value},,GML Visual story text
GMStdWhileLoop_Story_5,While ${var} is not greater than ${value},当${var}不大于${value}时,,GML Visual story text
GMStdWhileLoop_Story_6,While ${var} is not greater than ${value} on ${applyto},当${var}不大于${value}时，${applyto}上的${var}不大于${value},,GML Visual story text
GMStdWhileLoop_Story_7,While ${var} is not greater than or equal to ${value},当${var}不大于或等于${value}时,,GML Visual story text
GMStdWhileLoop_Story_8,While ${var} is not greater than or equal to ${value} on ${applyto},当${var}不大于或等于${value}的时候，${applyto}上的${var}就会出现,,GML Visual story text
GMStdWhileLoop_Story_9,While ${var} is not less than or equal to ${value},当${var}不小于或等于${value}时,,GML Visual story text
GMStdWhileLoop_Story_10,While ${var} is not less than or equal to ${value} on ${applyto},当${var}不小于或等于${value}时，${applyto}上的${var}就会出现,,GML Visual story text
GMStdWhileLoop_Story_11,While ${var} is equal to ${value},而${var}等于${value},,GML Visual story text
GMStdWhileLoop_Story_12,While ${var} is equal to ${value} on ${applyto},在${applyto}上，${var}等于${value},,GML Visual story text
GMStdWhileLoop_Story_13,While ${var} is less than ${value},当${var}小于${value}时,,GML Visual story text
GMStdWhileLoop_Story_14,While ${var} is less than ${value} on ${applyto},当${var}小于${value}时，${applyto}上的${var}就会出现,,GML Visual story text
GMStdWhileLoop_Story_15,While ${var} is greater than ${value},当${var}大于${value}时,,GML Visual story text
GMStdWhileLoop_Story_16,While ${var} is greater than ${value} on ${applyto},当${applyto}上的${var}大于${value}的时候,,GML Visual story text
GMStdWhileLoop_Story_17,While ${var} is greater than or equal to ${value},当${var}大于或等于${value}时,,GML Visual story text
GMStdWhileLoop_Story_18,While ${var} is greater than or equal to ${value} on ${applyto},当${var}大于或等于${value}时，${applyto}上的${var}大于或等于${value},,GML Visual story text
GMStdWhileLoop_Story_19,While ${var} is less than or equal to ${value},当${var}小于或等于${value}时,,GML Visual story text
GMStdWhileLoop_Story_20,While ${var} is less than or equal to ${value} on ${applyto},当${var}小于或等于${value}时，${applyto}上的${var}就会出现,,GML Visual story text
GMStdForLoop_Story_1,"For ${init}, while ${cond} do ${expr}",对于${init}，当${cond}做${expr},,GML Visual story text
GMStdForLoop_Story_2,"For ${init}, while ${cond} do ${expr} on ${applyto}",对于${init}，当${cond}在${applyto}上做${expr},,GML Visual story text
GMStdBreak_Story,Break,休息,,GML Visual story text
GMStdSwitch_Story_1,Switch ${expr},Switch ${expr},,GML Visual story text
GMStdSwitch_Story_2,Switch ${expr} on ${applyto},将${expr}换成${applyto},,GML Visual story text
GMStdCase_Story_1,Case: ${const},案例：${const},,GML Visual story text
GMStdDefault_Story,Default,默认,,GML Visual story text
GMStdCreateList_Story_1,Set a new list to ${var}${show_input_count},设置一个新的列表为${var}${show_input_count},,GML Visual story text
GMStdCreateList_Story_2,Set a new list to ${var} on ${applyto}${show_input_count},在${applyto}${show_input_count}上设置一个新的列表到${var},,GML Visual story text
GMStdCreateList_Story_3,Set a new list to temp ${var}${show_input_count},设置一个新的列表为临时列表 ${var}${show_input_count},,GML Visual story text
GMStdCreateList_Story_4,Set a new list to temp ${var} on ${applyto}${show_input_count},在${applyto}${show_input_count}上设置一个新的临时列表${var},,GML Visual story text
GMStdCreateMap_Story_1,Set a new map to ${var}${show_input_count},设置一个新的映射到${var}${show_input_count},,GML Visual story text
GMStdCreateMap_Story_2,Set a new map to ${var} on ${applyto}${show_input_count},在${applyto}${show_input_count}上设置一个新的映射到${var},,GML Visual story text
GMStdCreateMap_Story_3,Set a new map to temp ${var}${show_input_count},设置一个新的地图为临时地图 ${var}${show_input_count},,GML Visual story text
GMStdCreateMap_Story_4,Set a new map to temp ${var} on ${applyto}${show_input_count},在${applyto}${show_input_count}上设置一个新的映射到临时的${var},,GML Visual story text
GMStdCreateGrid_Story_1,"Set a new grid with size ${width},${height} to ${var}${show_input_count}","设置一个新的网格，大小为${width},${height}，大小为${var}${show_input_count}",,GML Visual story text
GMStdCreateGrid_Story_2,"Set a new grid with size ${width},${height} to ${var} on ${applyto}${show_input_count}","在${applyto}${show_input_count}上设置一个大小为${width},${height}的新网格为${var}",,GML Visual story text
GMStdCreateGrid_Story_3,"Set a new grid with size ${width},${height} to temp ${var}${show_input_count}","设置一个新的网格，大小为${width},${height}为临时${var}${show_input_count}",,GML Visual story text
GMStdCreateGrid_Story_4,"Set a new grid with size ${width},${height} to temp ${var} on ${applyto}${show_input_count}","在${applyto}${show_input_count}上设置一个大小为${width},${height}的新网格为临时${var}",,GML Visual story text
GMStdCreateStack_Story_1,Set a new stack to ${var}${show_input_count},设置一个新的堆栈为${var}${show_input_count},,GML Visual story text
GMStdCreateStack_Story_2,Set a new stack to ${var} on ${applyto}${show_input_count},在${applyto}${show_input_count}上设置一个新的堆栈到${var},,GML Visual story text
GMStdCreateStack_Story_3,Set a new stack to temp ${var}${show_input_count},设置一个新的堆栈为临时堆栈 ${var}${show_input_count},,GML Visual story text
GMStdCreateStack_Story_4,Set a new stack to temp ${var} on ${applyto}${show_input_count},在${applyto}${show_input_count}上设置一个新的栈到临时${var},,GML Visual story text
GMStdDSClear_Story_1,Clear list in ${var}${show_input_count},清除${var}${show_input_count}中的列表,,GML Visual story text
GMStdDSClear_Story_2,Clear list in ${var} on ${applyto}${show_input_count},在${applyto}${show_input_count}上清除${var}中的列表,,GML Visual story text
GMStdDSClear_Story_3,Clear map in ${var}${show_input_count},清除${var}${show_input_count}中的地图,,GML Visual story text
GMStdDSClear_Story_4,Clear map in ${var} on ${applyto}${show_input_count},在${applyto}${show_input_count}上清除${var}中的映射,,GML Visual story text
GMStdDSClear_Story_5,Clear grid in ${var}${show_input_count},清除${var}${show_input_count}中的网格,,GML Visual story text
GMStdDSClear_Story_6,Clear grid in ${var} on ${applyto}${show_input_count},在${applyto}${show_input_count}上清除${var}中的网格,,GML Visual story text
GMStdDSClear_Story_7,Clear stack in ${var}${show_input_count},清除${var}${show_input_count}中的堆栈,,GML Visual story text
GMStdDSClear_Story_8,Clear stack in ${var} on ${applyto}${show_input_count},在${applyto}${show_input_count}上清除${var}中的堆栈,,GML Visual story text
GMStdDSFree_Story_1,Free list ${var} from memory${show_input_count},从内存中释放列表${var}${show_input_count},,GML Visual story text
GMStdDSFree_Story_2,Free list ${var} from memory on ${applyto}${show_input_count},在${applyto}${show_input_count}上从内存中释放列表${var},,GML Visual story text
GMStdDSFree_Story_3,Free map ${var} from memory${show_input_count},从内存中释放映射${var}${show_input_count},,GML Visual story text
GMStdDSFree_Story_4,Free map ${var} from memory on ${applyto}${show_input_count},在${applyto}${show_input_count}上从内存中释放映射${var},,GML Visual story text
GMStdDSFree_Story_5,Free grid ${var} from memory${show_input_count},从内存中释放网格${var}${show_input_count},,GML Visual story text
GMStdDSFree_Story_6,Free grid ${var} from memory on ${applyto}${show_input_count},在${applyto}${show_input_count}上从内存中释放网格${var},,GML Visual story text
GMStdDSFree_Story_7,Free stack ${var} from memory${show_input_count},从内存中释放栈${var}${show_input_count},,GML Visual story text
GMStdDSFree_Story_8,Free stack ${var} from memory on ${applyto}${show_input_count},在${applyto}${show_input_count}上从内存中释放栈${var},,GML Visual story text
GMStdListAdd_Story_1,Add ${value} to list ${var}${show_input_count},将${value}添加到${var}${show_input_count}列表中,,GML Visual story text
GMStdListAdd_Story_2,Add ${value} to list ${var} on ${applyto}${show_input_count},在${applyto}${show_input_count}上添加${value}到${var}列表,,GML Visual story text
GMStdListRemove_Story_1,Remove item ${index} from list ${var},从列表${var}中删除项目${index},,GML Visual story text
GMStdListRemove_Story_2,Remove item ${index} from list ${var} on ${applyto},在${applyto}上从列表${var}中删除${index}项,,GML Visual story text
GMStdListGetAt_Story_1,Get item ${index} in list ${var} into ${assignee}${show_input_count},将列表${var}中的${index}项放入${assignee}${show_input_count},,GML Visual story text
GMStdListGetAt_Story_2,Get item ${index} in list ${var} into ${assignee} on ${applyto}${show_input_count},在${applyto}${show_input_count}上获取列表${var}中的${index}项进入${assignee},,GML Visual story text
GMStdListGetAt_Story_3,Get item ${index} in list ${var} into temp ${assignee}${show_input_count},将列表${var}中的${index}项放入临时${assignee}${show_input_count}中,,GML Visual story text
GMStdListGetAt_Story_4,Get item ${index} in list ${var} into temp ${assignee} on ${applyto}${show_input_count},在${applyto}${show_input_count}上获取列表${var}中的${index}项进入临时${assignee},,GML Visual story text
GMStdListIndexOf_Story_1,Get index of item ${value} in list ${var} into ${assignee}${show_input_count},从列表${var}中获取${value}项的砖块到${assignee}${show_input_count},,GML Visual story text
GMStdListIndexOf_Story_2,Get index of item ${value} in list ${var} into ${assignee} on ${applyto}${show_input_count},在${applyto}${show_input_count}上获取列表${var}中${value}项的砖块到${assignee},,GML Visual story text
GMStdListIndexOf_Story_3,Get index of item ${value} in list ${var} into temp ${assignee}${show_input_count},在列表${var}中获取${value}项的砖块到临时${assignee}${show_input_count},,GML Visual story text
GMStdListIndexOf_Story_4,Get index of item ${value} in list ${var} into temp ${assignee} on ${applyto}${show_input_count},在${applyto}${show_input_count}上获取列表${var}中${value}项的砖块到临时${assignee},,GML Visual story text
GMStdListInsert_Story_1,Insert ${value} into list ${var} at index ${index},在砖块${index}处将${value}插入到列表${var}中,,GML Visual story text
GMStdListInsert_Story_2,Insert ${value} into list ${var} at index ${index} on ${applyto},在${applyto}上的砖块${index}处将${value}插入到列表${var}中,,GML Visual story text
GMStdListCount_Story_1,Get item count in list ${var} and assign it to ${assignee},获取列表${var}中的项目数，并将其分配给${assignee},,GML Visual story text
GMStdListCount_Story_2,Get item count in list ${var} and assign it to ${assignee} on ${applyto},获取列表${var}中的项目数，并在${applyto}上将其分配给${assignee},,GML Visual story text
GMStdListCount_Story_3,Get item count in list ${var} and assign it to temp ${assignee},获取列表中的项目数${var}，并将其分配给临时的${assignee},,GML Visual story text
GMStdListCount_Story_4,Get item count in list ${var} and assign it to temp ${assignee} on ${applyto},获取列表${var}中的项目数，并在${applyto}上将其分配给临时${assignee},,GML Visual story text
GMStdMapSetValue_Story_1,Set key ${key} to ${value} in map ${var}${show_input_count},在map ${var}${show_input_count}中设置key ${key}为${value},,GML Visual story text
GMStdMapSetValue_Story_2,Set key ${key} to ${value} in map ${var} on ${applyto}${show_input_count},在${applyto}${show_input_count}上的映射${var}中，将key ${key}设置为${value},,GML Visual story text
GMStdMapGetValue_Story_1,Get value of key ${key} in map ${map} into ${assignee}${show_input_count},在映射${map}中获取key ${key}的值到${assignee}${show_input_count},,GML Visual story text
GMStdMapGetValue_Story_2,Get value of key ${key} in map ${map} into ${assignee} on ${applyto}${show_input_count},在${applyto}${show_input_count}上获取映射${map}中的key ${key}的值到${assignee},,GML Visual story text
GMStdMapGetValue_Story_3,Get value of key ${key} in map ${map} into temp ${assignee}${show_input_count},在map ${map}中获取key ${key}的值到temp ${assignee}${show_input_count},,GML Visual story text
GMStdMapGetValue_Story_4,Get value of key ${key} in map ${map} into temp ${assignee} on ${applyto}${show_input_count},在${applyto}${show_input_count}上获取映射${map}中的键值${key}到临时${assignee},,GML Visual story text
GMStdMapRemove_Story_1,Remove key ${key} from map ${map}${show_input_count},从地图${map}${show_input_count}中删除关键字${key},,GML Visual story text
GMStdMapRemove_Story_2,Remove key ${key} from map ${map} on ${applyto}${show_input_count},在${applyto}${show_input_count}上从映射${map}中删除关键字${key},,GML Visual story text
GMStdGridSetValue_Story_1,"Set ${value} in grid ${var} at ${x},${y}${show_input_count}","在网格${var}的${x},${y}${show_input_count}处设置${value}",,GML Visual story text
GMStdGridSetValue_Story_2,"Set ${value} in grid ${var} at ${x},${y} on ${applyto}${show_input_count}","在${applyto}${show_input_count}上设置${value}在网格${var}中的${x},${y}",,GML Visual story text
GMStdGridGetValue_Story_1,"Get value in grid ${var} at ${x},${y} into ${assignee}${show_input_count}","将网格${var}中${x},${y}的值放入${assignee}${show_input_count}中",,GML Visual story text
GMStdGridGetValue_Story_2,"Get value in grid ${var} at ${x},${y} into ${assignee} on ${applyto}${show_input_count}","在${applyto}${show_input_count}上获取网格${var}中${x},${y}的值到${assignee}",,GML Visual story text
GMStdGridGetValue_Story_3,"Get value in grid ${var} at ${x},${y} into temp ${assignee}${show_input_count}","将网格${var}中${x},${y}的值放入临时${assignee}${show_input_count}中",,GML Visual story text
GMStdGridGetValue_Story_4,"Get value in grid ${var} at ${x},${y} into temp ${assignee} on ${applyto}${show_input_count}","在${applyto}${show_input_count}上获取网格${var}中${x},${y}的值到临时${assignee}中",,GML Visual story text
GMStdGridClear_Story_1,Clear grid ${var} to value ${value},清理网格${var}为值${value},,GML Visual story text
GMStdGridClear_Story_2,Clear grid ${var} to value ${value} on ${applyto},在${applyto}上清空网格${var}到值${value},,GML Visual story text
GMStdStackPush_Story_1,Push ${value} onto stack ${var}${show_input_count},将${value}推到堆栈上${var}${show_input_count},,GML Visual story text
GMStdStackPush_Story_2,Push ${value} onto stack ${var} on ${applyto}${show_input_count},在${applyto}${show_input_count}上将${value}推到堆栈${var}上,,GML Visual story text
GMStdStackPop_Story_1,Pop from stack ${var} into ${assignee}${show_input_count},从堆栈${var}中跳转到${assignee}${show_input_count}中,,GML Visual story text
GMStdStackPop_Story_2,Pop from stack ${var} into ${assignee} on ${applyto}${show_input_count},在${applyto}${show_input_count}上，将${var}从堆栈中弹入${assignee},,GML Visual story text
GMStdStackPop_Story_3,Pop from stack ${var} into temp ${assignee}${show_input_count},从堆栈${var}跳转到临时${assignee}${show_input_count},,GML Visual story text
GMStdStackPop_Story_4,Pop from stack ${var} into temp ${assignee} on ${applyto}${show_input_count},在${applyto}${show_input_count}上从堆栈${var}弹入临时${assignee},,GML Visual story text
GMStdIfDSExists_Story_1,If list ${var} does not exists,如果列表${var}不存在,,GML Visual story text
GMStdIfDSExists_Story_2,If list ${var} does not exists on ${applyto},如果在${applyto}上不存在列表${var}，则在${applyto}上存在${var},,GML Visual story text
GMStdIfDSExists_Story_3,If list ${var} exists,如果列表${var}存在,,GML Visual story text
GMStdIfDSExists_Story_4,If list ${var} exists on ${applyto},如果在${applyto}上存在列表${var}，那么,,GML Visual story text
GMStdIfDSExists_Story_5,If map ${var} does not exists,如果地图${var}不存在,,GML Visual story text
GMStdIfDSExists_Story_6,If map ${var} does not exists on ${applyto},如果在${applyto}上不存在map ${var}，那么,,GML Visual story text
GMStdIfDSExists_Story_7,If map ${var} exists,如果地图${var}存在,,GML Visual story text
GMStdIfDSExists_Story_8,If map ${var} exists on ${applyto},如果在${applyto}上存在map ${var}，那么,,GML Visual story text
GMStdIfDSExists_Story_9,If grid ${var} does not exists,如果网格${var}不存在,,GML Visual story text
GMStdIfDSExists_Story_10,If grid ${var} does not exists on ${applyto},如果${applyto}上的网格${var}不存在，那么${applyto}上的网格${var}就不存在,,GML Visual story text
GMStdIfDSExists_Story_11,If grid ${var} exists,如果网格${var}存在,,GML Visual story text
GMStdIfDSExists_Story_12,If grid ${var} exists on ${applyto},如果在${applyto}上存在${var}网格,,GML Visual story text
GMStdIfDSExists_Story_13,If stack ${var} does not exists,如果栈${var}不存在,,GML Visual story text
GMStdIfDSExists_Story_14,If stack ${var} does not exists on ${applyto},如果栈${var}不存在于${applyto}上,,GML Visual story text
GMStdIfDSExists_Story_15,If stack ${var} exists,如果堆栈${var}存在,,GML Visual story text
GMStdIfDSExists_Story_16,If stack ${var} exists on ${applyto},如果在${applyto}上存在栈${var}，那么在${applyto}上的${var}就会存在,,GML Visual story text
GMStdIfDSEmpty_Story_1,If list ${var} is not empty,如果列表${var}不是空的,,GML Visual story text
GMStdIfDSEmpty_Story_2,If list ${var} is not empty on ${applyto},如果列表${var}在${applyto}上不为空,,GML Visual story text
GMStdIfDSEmpty_Story_3,If list ${var} is empty,如果列表${var}为空,,GML Visual story text
GMStdIfDSEmpty_Story_4,If list ${var} is empty on ${applyto},如果${applyto}上的列表${var}为空,,GML Visual story text
GMStdIfDSEmpty_Story_5,If map ${var} is not empty,如果map ${var}不是空的,,GML Visual story text
GMStdIfDSEmpty_Story_6,If map ${var} is not empty on ${applyto},如果在${applyto}上，map ${var}不是空的,,GML Visual story text
GMStdIfDSEmpty_Story_7,If map ${var} is empty,如果地图${var}为空,,GML Visual story text
GMStdIfDSEmpty_Story_8,If map ${var} is empty on ${applyto},如果在${applyto}上的映射${var}为空,,GML Visual story text
GMStdIfDSEmpty_Story_9,If grid ${var} is not empty,如果网格${var}不是空的,,GML Visual story text
GMStdIfDSEmpty_Story_10,If grid ${var} is not empty on ${applyto},如果${applyto}上的网格${var}不是空的,,GML Visual story text
GMStdIfDSEmpty_Story_11,If grid ${var} is empty,如果网格${var}为空,,GML Visual story text
GMStdIfDSEmpty_Story_12,If grid ${var} is empty on ${applyto},如果${applyto}上的网格${var}为空,,GML Visual story text
GMStdIfDSEmpty_Story_13,If stack ${var} is not empty,如果栈${var}不是空的,,GML Visual story text
GMStdIfDSEmpty_Story_14,If stack ${var} is not empty on ${applyto},如果堆栈${var}在${applyto}上不是空的,,GML Visual story text
GMStdIfDSEmpty_Story_15,If stack ${var} is empty,如果栈${var}为空,,GML Visual story text
GMStdIfDSEmpty_Story_16,If stack ${var} is empty on ${applyto},如果堆栈${var}在${applyto}上为空,,GML Visual story text
GMStdBufferCreate_Story_1,Create buffer into ${target}${show_input_count},创建缓冲区到${target}${show_input_count},,GML Visual story text
GMStdBufferCreate_Story_2,Create buffer into ${target} on ${applyto}${show_input_count},在${applyto}${show_input_count}上创建缓冲区到${target},,GML Visual story text
GMStdBufferCreate_Story_3,Create buffer into temp ${target}${show_input_count},将缓冲区创建为临时的${target}${show_input_count},,GML Visual story text
GMStdBufferCreate_Story_4,Create buffer into temp ${target} on ${applyto}${show_input_count},在${applyto}${show_input_count}上创建缓冲区到临时${target},,GML Visual story text
GMStdBufferCopy_Story_1,Copy buffer ${buffer} into ${target},将缓冲区${buffer}复制到${target}中,,GML Visual story text
GMStdBufferCopy_Story_2,Copy buffer ${buffer} into ${target} on ${applyto},在${applyto}上将缓冲区${buffer}复制到${target}中,,GML Visual story text
GMStdBufferDelete_Story_1,Delete buffer ${buffer}${show_input_count},删除缓冲区 ${buffer}${show_input_count},,GML Visual story text
GMStdBufferDelete_Story_2,Delete buffer ${buffer} on ${applyto}${show_input_count},在${applyto}${show_input_count}上删除缓冲区${buffer},,GML Visual story text
GMStdBufferRead_Story_1,Read from buffer ${buffer},从缓冲区读取 ${buffer},,GML Visual story text
GMStdBufferRead_Story_2,Read from buffer ${buffer} on ${applyto},在${applyto}上从缓冲区${buffer}读取,,GML Visual story text
GMStdBufferRead_Story_3,Read from buffer ${buffer} into ${target},从缓冲区${buffer}读入${target},,GML Visual story text
GMStdBufferRead_Story_4,Read from buffer ${buffer} into ${target} on ${applyto},在${applyto}上从缓冲区${buffer}读入${target},,GML Visual story text
GMStdBufferRead_Story_5,Read from buffer ${buffer} into temp ${target},从缓冲区${buffer}读入临时${target},,GML Visual story text
GMStdBufferRead_Story_6,Read from buffer ${buffer} into temp ${target} on ${applyto},在${applyto}上从缓冲区${buffer}读入临时${target},,GML Visual story text
GMStdBufferWrite_Story_1,Write ${value} to buffer ${buffer},将${value}写入缓冲区${buffer},,GML Visual story text
GMStdBufferWrite_Story_2,Write ${value} to buffer ${buffer} on ${applyto},在${applyto}上将${value}写入缓冲区${buffer},,GML Visual story text
GMStdBufferSeek_Story_1,Seek to position ${pos} from start in buffer ${buffer},从起始位置开始寻找${pos}的位置，在缓冲区${buffer}中,,GML Visual story text
GMStdBufferSeek_Story_2,Seek to position ${pos} from start in buffer ${buffer} on ${applyto},在${applyto}上，从起始位置开始寻找${pos}的位置,,GML Visual story text
GMStdBufferSeek_Story_3,Seek to position ${pos} relative to position in buffer ${buffer},寻找相对于缓冲区${buffer}中的位置${pos}的位置,,GML Visual story text
GMStdBufferSeek_Story_4,Seek to position ${pos} relative to position in buffer ${buffer} on ${applyto},在${applyto}上寻求${pos}相对于缓冲区${buffer}的位置,,GML Visual story text
GMStdBufferSeek_Story_5,Seek to position ${pos} from end in buffer ${buffer},从缓冲区${buffer}的末端开始寻找${pos}的位置,,GML Visual story text
GMStdBufferSeek_Story_6,Seek to position ${pos} from end in buffer ${buffer} on ${applyto},在${applyto}上，从缓冲区${buffer}的末端开始寻找${pos}的位置,,GML Visual story text
GMStdBufferGetSize_Story_1,Get size of buffer ${buffer} into ${target},将缓冲区的大小${buffer}放入${target},,GML Visual story text
GMStdBufferGetSize_Story_2,Get size of buffer ${buffer} into ${target} on ${applyto},在${applyto}上获取${buffer}到${target}的大小,,GML Visual story text
GMStdBufferGetSize_Story_3,Get size of buffer ${buffer} into temp ${target},获取缓冲区${buffer}的大小到临时${target},,GML Visual story text
GMStdBufferGetSize_Story_4,Get size of buffer ${buffer} into temp ${target} on ${applyto},在${applyto}上获取缓冲区${buffer}的大小到临时${target},,GML Visual story text
GMStdBufferGetPosition_Story_1,Get position in buffer ${buffer} into ${target},将缓冲区${buffer}中的位置放入${target}中,,GML Visual story text
GMStdBufferGetPosition_Story_2,Get position in buffer ${buffer} into ${target} on ${applyto},在${applyto}上获取缓冲区${buffer}的位置到${target},,GML Visual story text
GMStdBufferGetPosition_Story_3,Get position in buffer ${buffer} into temp ${target},获取缓冲区${buffer}中的位置到临时${target}中,,GML Visual story text
GMStdBufferGetPosition_Story_4,Get position in buffer ${buffer} into temp ${target} on ${applyto},在${applyto}上获取缓冲区${buffer}中的位置到临时${target}中,,GML Visual story text
GMStdBufferExists_Story_1,If buffer ${buffer} does not exist,如果缓冲区${buffer}不存在的话,,GML Visual story text
GMStdBufferExists_Story_2,If buffer ${buffer} does not exist on ${applyto},如果${buffer}在${applyto}上不存在,,GML Visual story text
GMStdBufferExists_Story_3,If buffer ${buffer} exists,如果缓冲区${buffer}存在,,GML Visual story text
GMStdBufferExists_Story_4,If buffer ${buffer} exists on ${applyto},如果${applyto}上存在${buffer}缓冲区,,GML Visual story text
GMStdBufferEOS_Story_1,If end of buffer ${buffer} not reached,如果没有到达缓冲区的终点${buffer}，则会出现以下情况,,GML Visual story text
GMStdBufferEOS_Story_2,If end of buffer ${buffer} not reached on ${applyto},如果在${applyto}上没有到达缓冲区${buffer}的终点，那么在${applyto}上就会有一个缓冲区,,GML Visual story text
GMStdBufferEOS_Story_3,If end of buffer ${buffer} reached,如果到达缓冲区的终点${buffer}，则说明已经到了,,GML Visual story text
GMStdBufferEOS_Story_4,If end of buffer ${buffer} reached on ${applyto},如果在${applyto}上到达缓冲区${buffer}的终点，则在${applyto}上到达,,GML Visual story text
GMStdBufferLoad_Story_1,Load file ${filename} into buffer ${target},将文件${filename}载入缓冲区${target},,GML Visual story text
GMStdBufferLoad_Story_2,Load file ${filename} into buffer ${target} on ${applyto},在${applyto}上将文件${filename}载入缓冲区${target},,GML Visual story text
GMStdBufferLoad_Story_3,Load file ${filename} into buffer temp ${target},将文件${filename}载入缓冲区temp ${target},,GML Visual story text
GMStdBufferLoad_Story_4,Load file ${filename} into buffer temp ${target} on ${applyto},在${applyto}上将文件${filename}加载到缓冲区temp ${target}中,,GML Visual story text
GMStdBufferSave_Story_1,Save buffer ${buffer} to file ${filename},将缓冲区${buffer}保存到文件${filename},,GML Visual story text
GMStdBufferSave_Story_2,Save buffer ${buffer} to file ${filename} on ${applyto},在${applyto}上保存缓冲区${buffer}到文件${filename},,GML Visual story text
GMStdFileRename_Story_1,Rename file ${file1} to ${file2},将文件${file1}重命名为${file2},,GML Visual story text
GMStdFileRename_Story_2,Rename file ${file1} to ${file2} on ${applyto},在${applyto}上将文件${file1}重命名为${file2},,GML Visual story text
GMStdFileCopy_Story_1,Copy file ${file1} to ${file2},复制文件${file1}到${file2},,GML Visual story text
GMStdFileCopy_Story_2,Copy file ${file1} to ${file2} on ${applyto},在${applyto}上复制文件${file1}到${file2},,GML Visual story text
GMStdFileDelete_Story_1,Delete file ${file},删除文件 ${file},,GML Visual story text
GMStdFileDelete_Story_2,Delete file ${file} on ${applyto},在${applyto}上删除文件${file},,GML Visual story text
GMStdOpenIni_Story_1,Open ini file ${filename},打开ini文件${文件名},,GML Visual story text
GMStdOpenIni_Story_2,Open ini file ${filename} on ${applyto},在${applyto}上打开ini文件${filename},,GML Visual story text
GMStdCloseIni_Story_1,Close ini file,关闭ini文件,,GML Visual story text
GMStdCloseIni_Story_2,Close ini file on ${applyto},在${applyto}上关闭ini文件,,GML Visual story text
GMStdIniWrite_Story_1,Write ${value} under key ${key} in section ${section} to ini file,将${section}节中的${key}键下的${value}写入ini文件,,GML Visual story text
GMStdIniWrite_Story_2,Write ${value} under key ${key} in section ${section} to ini file on ${applyto},将${section}节${key}下的${value}写入${applyto}的ini文件中,,GML Visual story text
GMStdIniRead_Story_1,Read key ${key} in section ${section} and assign it to ${var},读取章节${section}中的密钥${key}，并将其分配给${var},,GML Visual story text
GMStdIniRead_Story_2,Read key ${key} in section ${section} and assign it to ${var} on ${applyto},读取章节${section}中的${key}，并在${applyto}上将其分配给${var},,GML Visual story text
GMStdIniRead_Story_3,Read key ${key} in section ${section} and assign it to temp ${var},读取章节${section}中的密钥${key}，并将其分配给临时${var},,GML Visual story text
GMStdIniRead_Story_4,Read key ${key} in section ${section} and assign it to temp ${var} on ${applyto},读取章节${section}中的key${key}，并在${applyto}上将其分配给临时${var},,GML Visual story text
GMStdIfFileExists_Story_1,If file ${file} does not exist,如果文件${file}不存在,,GML Visual story text
GMStdIfFileExists_Story_2,If file ${file} does not exist on ${applyto},如果文件${file}不存在于${applyto}上,,GML Visual story text
GMStdIfFileExists_Story_3,If file ${file} exists,如果文件${file}存在,,GML Visual story text
GMStdIfFileExists_Story_4,If file ${file} exists on ${applyto},如果${applyto}上存在${file}文件,,GML Visual story text
GMStdDecimalToInteger_Story_1,Round ${n} and assign it to ${var},将${n}取整并分配给${var},,GML Visual story text
GMStdDecimalToInteger_Story_2,Round ${n} and assign it to ${var} on ${applyto},将${n}四舍五入，然后在${applyto}上将其分配给${var},,GML Visual story text
GMStdDecimalToInteger_Story_3,Round ${n} and assign it to temp ${var},四舍五入${n}，并将其分配给临时${var},,GML Visual story text
GMStdDecimalToInteger_Story_4,Round ${n} and assign it to temp ${var} on ${applyto},将${n}四舍五入，并将其分配给${applyto}上的临时${var},,GML Visual story text
GMStdDecimalToInteger_Story_5,Ceil ${n} and assign it to ${var},向上取整 ${n} 并将其分配给 ${var},,GML Visual story text
GMStdDecimalToInteger_Story_6,Ceil ${n} and assign it to ${var} on ${applyto},向上取整 ${n} 并将其分配给 ${var} 上的 ${applyto},,GML Visual story text
GMStdDecimalToInteger_Story_7,Ceil ${n} and assign it to temp ${var},向上取整 ${n} 并将其分配给 temp ${var},,GML Visual story text
GMStdDecimalToInteger_Story_8,Ceil ${n} and assign it to temp ${var} on ${applyto},向上取整 ${n} 并将其分配给 ${applyto} 上的 temp ${var},,GML Visual story text
GMStdDecimalToInteger_Story_9,Floor ${n} and assign it to ${var},向下取整 ${n} 并将其分配给 ${var},,GML Visual story text
GMStdDecimalToInteger_Story_10,Floor ${n} and assign it to ${var} on ${applyto},向下取整${n}，并在${applyto}上将其分配给${var},,GML Visual story text
GMStdDecimalToInteger_Story_11,Floor ${n} and assign it to temp ${var},向下取整${n} 并将其分配给 temp ${var},,GML Visual story text
GMStdDecimalToInteger_Story_12,Floor ${n} and assign it to temp ${var} on ${applyto},向下取整${n}，并将其分配给${applyto}上的临时${var},,GML Visual story text
GMStdStringToNumber_Story_1,Convert ${value} to a string and assign it to ${var},将${value}转换为字符串并分配给${var},,GML Visual story text
GMStdStringToNumber_Story_2,Convert ${value} to a string and assign it to ${var} on ${applyto},在${applyto}上将${value}转换为字符串并赋值给${var},,GML Visual story text
GMStdStringToNumber_Story_3,Convert ${value} to a string and assign it to temp ${var},将${value}转换为字符串，并将其分配给临时的${var},,GML Visual story text
GMStdStringToNumber_Story_4,Convert ${value} to a string and assign it to temp ${var} on ${applyto},在${applyto}上将${value}转换为字符串并赋值给临时的${var},,GML Visual story text
GMStdNumberToString_Story_1,Convert ${value} to a number and assign it to ${var},将${value}转换为数字并分配给${var},,GML Visual story text
GMStdNumberToString_Story_2,Convert ${value} to a number and assign it to ${var} on ${applyto},在${applyto}上将${value}转换为数字并分配给${var},,GML Visual story text
GMStdNumberToString_Story_3,Convert ${value} to a number and assign it to temp ${var},将${value}转换为一个数字，并将其分配给临时的${var},,GML Visual story text
GMStdNumberToString_Story_4,Convert ${value} to a number and assign it to temp ${var} on ${applyto},在${applyto}上将${value}转换为数字并分配给临时${var},,GML Visual story text
GMStdGetRandomNumber_Story_1,Get a random number between ${min} and ${max} into ${var},在${min}和${max}之间获取一个随机数到${var},,GML Visual story text
GMStdGetRandomNumber_Story_2,Get a random number between ${min} and ${max} into ${var} on ${applyto},在${applyto}上获取${min}和${max}之间的随机数到${var},,GML Visual story text
GMStdGetRandomNumber_Story_3,Get a random number between ${min} and ${max} into temp ${var},在${min}和${max}之间获取一个随机数到temp ${var},,GML Visual story text
GMStdGetRandomNumber_Story_4,Get a random number between ${min} and ${max} into temp ${var} on ${applyto},在${applyto}上获取${min}和${max}之间的随机数到临时${var}中,,GML Visual story text
GMStdRandomize_Story,Randomize seed,随机化种子,,GML Visual story text
GMStdChoose_Story_1,Get a random element from a list into ${var}${show_input_count},从列表中随机获取一个元素到${var}${show_input_count},,GML Visual story text
GMStdChoose_Story_2,Get a random element from a list into ${var} on ${applyto}${show_input_count},在${applyto}${show_input_count}上从列表中随机获取一个元素到${var},,GML Visual story text
GMStdChoose_Story_3,Get a random element from a list into temp ${var}${show_input_count},从列表中随机获取一个元素到临时文件中 ${var}${show_input_count},,GML Visual story text
GMStdChoose_Story_4,Get a random element from a list into temp ${var} on ${applyto}${show_input_count},在${applyto}${show_input_count}上从列表中随机获取一个元素到临时的${var}中,,GML Visual story text
GMStdSetViewVar_Story_1,Set view camera of view ${view} to ${value},将视图${view}的视图摄像机设置为${value},,GML Visual story text
GMStdSetViewVar_Story_2,Set view camera of view ${view} to ${value} on ${applyto},在${applyto}上将${view}的视图相机设置为${value},,GML Visual story text
GMStdSetViewVar_Story_3,Set view visibility of view ${view} to ${value},设置视图${view}的可见性为${value},,GML Visual story text
GMStdSetViewVar_Story_4,Set view visibility of view ${view} to ${value} on ${applyto},在${applyto}上设置视图${view}的可见性为${value},,GML Visual story text
GMStdSetViewVar_Story_5,Set view port X of view ${view} to ${value},设置视图${view}的视图端口X为${value},,GML Visual story text
GMStdSetViewVar_Story_6,Set view port X of view ${view} to ${value} on ${applyto},在${applyto}上将视图${view}的视图端口X设置为${value},,GML Visual story text
GMStdSetViewVar_Story_7,Set view port Y of view ${view} to ${value},设置视图${view}的视图端口Y为${value},,GML Visual story text
GMStdSetViewVar_Story_8,Set view port Y of view ${view} to ${value} on ${applyto},在${applyto}上将视图${view}的视图端口Y设置为${value},,GML Visual story text
GMStdSetViewVar_Story_9,Set view port width of view ${view} to ${value},设置视图${view}的视图端口宽度为${value},,GML Visual story text
GMStdSetViewVar_Story_10,Set view port width of view ${view} to ${value} on ${applyto},在${applyto}上将视图${view}的视图端口宽度设置为${value},,GML Visual story text
GMStdSetViewVar_Story_11,Set view port height of view ${view} to ${value},设置视图${view}的视图端口高度为${value},,GML Visual story text
GMStdSetViewVar_Story_12,Set view port height of view ${view} to ${value} on ${applyto},在${applyto}上将视图${view}的视图端口高度设置为${value},,GML Visual story text
GMStdSetViewVar_Story_13,Set view surface id of view ${view} to ${value},将视图${view}的视图表面ID设置为${value},,GML Visual story text
GMStdSetViewVar_Story_14,Set view surface id of view ${view} to ${value} on ${applyto},在${applyto}上将视图${view}的视图表面ID设置为${value},,GML Visual story text
GMStdGetViewVar_Story_1,Get view camera of view ${view} into ${target},将视图中的view相机${view}导入${target},,GML Visual story text
GMStdGetViewVar_Story_2,Get view camera of view ${view} into ${target} on ${applyto},在${applyto}上将${view}的视图相机变成${target},,GML Visual story text
GMStdGetViewVar_Story_3,Get view camera of view ${view} into temp ${target},将View相机中的View ${view}放入temp ${target},,GML Visual story text
GMStdGetViewVar_Story_4,Get view camera of view ${view} into temp ${target} on ${applyto},在${applyto}上，将视图${view}的视图相机放入临时${target}中,,GML Visual story text
GMStdGetViewVar_Story_5,Get view visibility of view ${view} into ${target},获取视图${view}的可见性到${target},,GML Visual story text
GMStdGetViewVar_Story_6,Get view visibility of view ${view} into ${target} on ${applyto},在${applyto}上获取视图${view}到${target}的可见性,,GML Visual story text
GMStdGetViewVar_Story_7,Get view visibility of view ${view} into temp ${target},获取视图${view}的可见性到临时文件${target},,GML Visual story text
GMStdGetViewVar_Story_8,Get view visibility of view ${view} into temp ${target} on ${applyto},在${applyto}上获取视图${view}的可见性，并将其放入临时文件${target}中,,GML Visual story text
GMStdGetViewVar_Story_9,Get view port X of view ${view} into ${target},将视图${view}的视图端口X获取到${target}中,,GML Visual story text
GMStdGetViewVar_Story_10,Get view port X of view ${view} into ${target} on ${applyto},在${applyto}上获取视图${view}的视图端口X到${target},,GML Visual story text
GMStdGetViewVar_Story_11,Get view port X of view ${view} into temp ${target},将视图${view}的视图端口X放入临时文件${target}中,,GML Visual story text
GMStdGetViewVar_Story_12,Get view port X of view ${view} into temp ${target} on ${applyto},在${applyto}上获取视图${view}的视图端口X到临时的${target},,GML Visual story text
GMStdGetViewVar_Story_13,Get view port Y of view ${view} into ${target},将视图${view}的Y端口获取到${target}中,,GML Visual story text
GMStdGetViewVar_Story_14,Get view port Y of view ${view} into ${target} on ${applyto},在${applyto}上获取视图${view}的视图端口Y到${target},,GML Visual story text
GMStdGetViewVar_Story_15,Get view port Y of view ${view} into temp ${target},将视图${view}的视图端口Y放入临时文件${target}中,,GML Visual story text
GMStdGetViewVar_Story_16,Get view port Y of view ${view} into temp ${target} on ${applyto},在${applyto}上获取视图${view}的视图端口Y到临时的${target},,GML Visual story text
GMStdGetViewVar_Story_17,Get view port width of view ${view} into ${target},获取视图${view}的视图端口宽度到${target},,GML Visual story text
GMStdGetViewVar_Story_18,Get view port width of view ${view} into ${target} on ${applyto},在${applyto}上获取视图${view}的视图端口宽度到${target},,GML Visual story text
GMStdGetViewVar_Story_19,Get view port width of view ${view} into temp ${target},获取视图${view}的视图端口宽度到临时的${target},,GML Visual story text
GMStdGetViewVar_Story_20,Get view port width of view ${view} into temp ${target} on ${applyto},在${applyto}上获取视图${view}的视图端口宽度到临时的${target},,GML Visual story text
GMStdGetViewVar_Story_21,Get view port height of view ${view} into ${target},获取视图${view}的视图端口高度到${target},,GML Visual story text
GMStdGetViewVar_Story_22,Get view port height of view ${view} into ${target} on ${applyto},在${applyto}上获取视图${view}的视图端口高度到${target},,GML Visual story text
GMStdGetViewVar_Story_23,Get view port height of view ${view} into temp ${target},获取视图${view}的视图端口高度到临时的${target},,GML Visual story text
GMStdGetViewVar_Story_24,Get view port height of view ${view} into temp ${target} on ${applyto},在${applyto}上获取视图${view}的视图端口高度到临时的${target},,GML Visual story text
GMStdGetViewVar_Story_25,Get view surface id of view ${view} into ${target},将视图${view}的视图表面id获取到${target}中,,GML Visual story text
GMStdGetViewVar_Story_26,Get view surface id of view ${view} into ${target} on ${applyto},在${applyto}上获取视图${view}的视图表面id到${target},,GML Visual story text
GMStdGetViewVar_Story_27,Get view surface id of view ${view} into temp ${target},将视图${view}的视图表面id获取到temp ${target}中,,GML Visual story text
GMStdGetViewVar_Story_28,Get view surface id of view ${view} into temp ${target} on ${applyto},在${applyto}上获取视图${view}的视图表面id到临时的${target},,GML Visual story text
GMStdGoToRoom_Story_1,Go to room ${room},去房间 ${房间},,GML Visual story text
GMStdGoToRoom_Story_2,Go to room ${room} on ${applyto},在${applyto}上转到${room}房间,,GML Visual story text
GMStdNextRoom_Story,Go to next room,去下一个房间,,GML Visual story text
GMStdPreviousRoom_Story,Go to previous room,回到上一个房间,,GML Visual story text
GMStdRestartRoom_Story,Restart current room,重新启动当前房间,,GML Visual story text
GMStdIfFirstRoom_Story_1,If this is not the first room,如果这不是第一个房间,,GML Visual story text
GMStdIfFirstRoom_Story_2,If this is the first room,如果这是第一个房间,,GML Visual story text
GMStdIfLastRoom_Story_1,If this is not the last room,如果这不是最后一个房间,,GML Visual story text
GMStdIfLastRoom_Story_2,If this is the last room,如果这是最后一个房间,,GML Visual story text
GMStdGetCurrentRoom_Story_1,Get current room into ${var},将当前的房间输入${var},,GML Visual story text
GMStdGetCurrentRoom_Story_2,Get current room into ${var} on ${applyto},在${applyto}上将当前的房间放入${var},,GML Visual story text
GMStdGetCurrentRoom_Story_3,Get current room into temp ${var},将当前房间的温度设置为${var},,GML Visual story text
GMStdGetCurrentRoom_Story_4,Get current room into temp ${var} on ${applyto},在${applyto}上将当前房间的温度${var}获取为临时房间,,GML Visual story text
GMStdStartPath_Story_1,Start path ${path} with speed ${speed} and ${atend} on end,启动路径${path}，速度为${speed}，结束时为${atend},,GML Visual story text
GMStdStartPath_Story_2,Start path ${path} with speed ${speed} and ${atend} on end on ${applyto},以${path}为起点，以${speed}为速度，以${atend}为终点，在${applyto}上运行,,GML Visual story text
GMStdStopPath_Story_1,Stop following a path,停止跟随此路径,,GML Visual story text
GMStdStopPath_Story_2,Stop following a path on ${applyto},停止跟随${applyto}上的路径,,GML Visual story text
GMStdPathPosition_Story_1,Add ${position} to path position,在路径位置上添加${position},,GML Visual story text
GMStdPathPosition_Story_2,Add ${position} to path position on ${applyto},在${applyto}的路径位置上添加${position},,GML Visual story text
GMStdPathPosition_Story_3,Set path position to ${position},设置路径位置为${position},,GML Visual story text
GMStdPathPosition_Story_4,Set path position to ${position} on ${applyto},在${applyto}上设置路径位置为${position},,GML Visual story text
GMStdPathGetPosition_Story_1,Get path position into ${target},获取路径位置到${target},,GML Visual story text
GMStdPathGetPosition_Story_2,Get path position into ${target} on ${applyto},在${applyto}上获取路径位置到${target},,GML Visual story text
GMStdPathGetPosition_Story_3,Get path position into temp ${target},获取路径位置到临时的${target},,GML Visual story text
GMStdPathGetPosition_Story_4,Get path position into temp ${target} on ${applyto},在${applyto}上获取路径位置到临时文件${target}中,,GML Visual story text
GMStdPathSpeed_Story_1,Add ${speed} to path speed,将${speed}加入到路径速度中,,GML Visual story text
GMStdPathSpeed_Story_2,Add ${speed} to path speed on ${applyto},在${applyto}上添加${speed}为路径速度,,GML Visual story text
GMStdPathSpeed_Story_3,Set path speed to ${speed},设置路径速度为${speed},,GML Visual story text
GMStdPathSpeed_Story_4,Set path speed to ${speed} on ${applyto},在${applyto}上设置路径速度为${speed},,GML Visual story text
GMStdPathGetSpeed_Story_1,Get path speed into ${target},获取路径速度到${target},,GML Visual story text
GMStdPathGetSpeed_Story_2,Get path speed into ${target} on ${applyto},在${applyto}上获取进入${target}的路径速度,,GML Visual story text
GMStdPathGetSpeed_Story_3,Get path speed into temp ${target},获取路径速度到临时的${target},,GML Visual story text
GMStdPathGetSpeed_Story_4,Get path speed into temp ${target} on ${applyto},在${applyto}上获取路径速度到temp ${target},,GML Visual story text
GMStdSetTimeline_Story_1,Start timeline ${timeline} and loop it,启动时间线${timeline}并循环使用,,GML Visual story text
GMStdSetTimeline_Story_2,Start timeline ${timeline} and loop it on ${applyto},启动时间线${timeline}，并在${applyto}上循环,,GML Visual story text
GMStdSetTimeline_Story_3,Start timeline ${timeline},开始时间线 ${时间线},,GML Visual story text
GMStdSetTimeline_Story_4,Start timeline ${timeline} on ${applyto},在${applyto}上启动时间线${timeline},,GML Visual story text
GMStdSetTimeline_Story_5,Set timeline ${timeline} and loop it,设置时间线${timeline}并循环使用,,GML Visual story text
GMStdSetTimeline_Story_6,Set timeline ${timeline} and loop it on ${applyto},设置时间线${timeline}，并在${applyto}上循环,,GML Visual story text
GMStdSetTimeline_Story_7,Set timeline ${timeline},设置时间线 ${timeline},,GML Visual story text
GMStdSetTimeline_Story_8,Set timeline ${timeline} on ${applyto},在${applyto}上设置时间线${timeline},,GML Visual story text
GMStdPositionTimeline_Story_1,Add ${position} to timeline position,添加${position}到时间轴位置,,GML Visual story text
GMStdPositionTimeline_Story_2,Add ${position} to timeline position on ${applyto},在${applyto}的时间轴位置上添加${position},,GML Visual story text
GMStdPositionTimeline_Story_3,Set timeline position to ${position},设置时间轴位置为${position},,GML Visual story text
GMStdPositionTimeline_Story_4,Set timeline position to ${position} on ${applyto},在${applyto}上设置时间轴位置为${position},,GML Visual story text
GMStdSpeedTimeline_Story_1,Add ${speed} to timeline speed,将${speed}加入到时间轴速度中,,GML Visual story text
GMStdSpeedTimeline_Story_2,Add ${speed} to timeline speed on ${applyto},在${applyto}上添加${speed}为时间轴速度,,GML Visual story text
GMStdSpeedTimeline_Story_3,Set timeline speed to ${speed},设置时间轴速度为${speed},,GML Visual story text
GMStdSpeedTimeline_Story_4,Set timeline speed to ${speed} on ${applyto},在${applyto}上设置时间轴速度为${speed},,GML Visual story text
GMStdSetTimelineState_Story_1,Start timeline,开始时间线,,GML Visual story text
GMStdSetTimelineState_Story_2,Start timeline on ${applyto},在${applyto}上开始时间轴,,GML Visual story text
GMStdSetTimelineState_Story_3,Resume timeline,恢复时间表,,GML Visual story text
GMStdSetTimelineState_Story_4,Resume timeline on ${applyto},在${applyto}上的恢复时间线,,GML Visual story text
GMStdSetTimelineState_Story_5,Pause timeline,暂停时间线,,GML Visual story text
GMStdSetTimelineState_Story_6,Pause timeline on ${applyto},在${applyto}上暂停时间线,,GML Visual story text
GMStdSetTimelineState_Story_7,Stop timeline,停止时间线,,GML Visual story text
GMStdSetTimelineState_Story_8,Stop timeline on ${applyto},停止时间线在${applyto}上,,GML Visual story text
GMStdRestartGame_Story,Restart game,重新启动游戏,,GML Visual story text
GMStdEndGame_Story,Exit game,退出游戏,,GML Visual story text
GMStdSaveGame_Story_1,Save game to file ${filename},保存游戏到文件 ${文件名},,GML Visual story text
GMStdSaveGame_Story_2,Save game to file ${filename} on ${applyto},在${applyto}上保存游戏到${文件名},,GML Visual story text
GMStdLoadGame_Story_1,Load game from file ${filename},从文件加载游戏 ${文件名},,GML Visual story text
GMStdLoadGame_Story_2,Load game from file ${filename} on ${applyto},在${applyto}上从文件${文件名}加载游戏,,GML Visual story text
GMStdSetScore_Story_1,Add ${score} to score,将${score}加入到分数中,,GML Visual story text
GMStdSetScore_Story_2,Add ${score} to score on ${applyto},在${applyto}上添加${score}进行评分,,GML Visual story text
GMStdSetScore_Story_3,Set score to ${score},将分数设置为${score},,GML Visual story text
GMStdSetScore_Story_4,Set score to ${score} on ${applyto},在${applyto}上设置分数为${score},,GML Visual story text
GMStdGetScore_Story_1,Get score into ${var},将分数输入${var},,GML Visual story text
GMStdGetScore_Story_2,Get score into ${var} on ${applyto},在${applyto}上获取分数到${var},,GML Visual story text
GMStdGetScore_Story_3,Get score into temp ${var},将得分存入临时账户 ${var},,GML Visual story text
GMStdGetScore_Story_4,Get score into temp ${var} on ${applyto},在${applyto}上获取分数到临时${var},,GML Visual story text
GMStdSetLives_Story_1,Add ${lives} to lives,将${lives}添加到lives中,,GML Visual story text
GMStdSetLives_Story_2,Add ${lives} to lives on ${applyto},在${applyto}上的生活中添加${lives},,GML Visual story text
GMStdSetLives_Story_3,Set lives to ${lives},将生命设置为${lives},,GML Visual story text
GMStdSetLives_Story_4,Set lives to ${lives} on ${applyto},在${applyto}上将生命设置为${lives},,GML Visual story text
GMStdGetLives_Story_1,Get lives into ${var},将生命存入${var},,GML Visual story text
GMStdGetLives_Story_2,Get lives into ${var} on ${applyto},在${applyto}上获取生命到${var},,GML Visual story text
GMStdGetLives_Story_3,Get lives into temp ${var},获取生命值到临时${var},,GML Visual story text
GMStdGetLives_Story_4,Get lives into temp ${var} on ${applyto},在${applyto}上获取生命值到临时${var},,GML Visual story text
GMStdSetHealth_Story_1,Add ${health} to health,将${health}加入健康信息,,GML Visual story text
GMStdSetHealth_Story_2,Add ${health} to health on ${applyto},在${applyto}上添加${health}为健康信息,,GML Visual story text
GMStdSetHealth_Story_3,Set health to ${health},将健康设置为${health},,GML Visual story text
GMStdSetHealth_Story_4,Set health to ${health} on ${applyto},在${applyto}上将健康设置为${health},,GML Visual story text
GMStdGetHealth_Story_1,Get health into ${var},在${var}中获取健康信息,,GML Visual story text
GMStdGetHealth_Story_2,Get health into ${var} on ${applyto},在${applyto}上将健康信息输入${var},,GML Visual story text
GMStdGetHealth_Story_3,Get health into temp ${var},将健康信息输入临时数据 ${var},,GML Visual story text
GMStdGetHealth_Story_4,Get health into temp ${var} on ${applyto},在${applyto}上，将健康值输入临时值${var},,GML Visual story text
GMStdIfScore_Story_1,If instance score is not equal to ${value},如果实例得分不等于${value},,GML Visual story text
GMStdIfScore_Story_2,If instance score is not equal to ${value} on ${applyto},如果在${applyto}上的实例得分不等于${value}，那么就会出现这种情况,,GML Visual story text
GMStdIfScore_Story_3,If instance score is not less than ${value},如果实例得分不低于${value},,GML Visual story text
GMStdIfScore_Story_4,If instance score is not less than ${value} on ${applyto},如果在${applyto}上的实例得分不低于${value},,GML Visual story text
GMStdIfScore_Story_5,If instance score is not greater than ${value},如果实例得分不大于${value},,GML Visual story text
GMStdIfScore_Story_6,If instance score is not greater than ${value} on ${applyto},如果在${applyto}上的实例得分不大于${value}，则可以使用${applyto},,GML Visual story text
GMStdIfScore_Story_7,If instance score is not less than or equal to ${value},如果实例得分不小于或等于${value},,GML Visual story text
GMStdIfScore_Story_8,If instance score is not less than or equal to ${value} on ${applyto},如果在${applyto}上，实例得分不小于或等于${value},,GML Visual story text
GMStdIfScore_Story_9,If instance score is not greater than or equal to ${value},如果实例得分不大于或等于${value},,GML Visual story text
GMStdIfScore_Story_10,If instance score is not greater than or equal to ${value} on ${applyto},如果在${applyto}上的实例得分不大于或等于${value}，那么就会出现这种情况,,GML Visual story text
GMStdIfScore_Story_11,If instance score is equal to ${value},如果实例得分等于${value},,GML Visual story text
GMStdIfScore_Story_12,If instance score is equal to ${value} on ${applyto},如果实例得分等于${applyto}上的${value}，则${applyto}上的${value},,GML Visual story text
GMStdIfScore_Story_13,If instance score is less than ${value},如果实例得分小于${value}，则会出现以下情况,,GML Visual story text
GMStdIfScore_Story_14,If instance score is less than ${value} on ${applyto},如果在${applyto}上的实例分数小于${value}，则会出现以下情况,,GML Visual story text
GMStdIfScore_Story_15,If instance score is greater than ${value},如果实例得分大于${value},,GML Visual story text
GMStdIfScore_Story_16,If instance score is greater than ${value} on ${applyto},如果在${applyto}上的实例得分大于${value}，则可以在${applyto}上的实例得分,,GML Visual story text
GMStdIfScore_Story_17,If instance score is less than or equal to ${value},如果实例得分小于或等于${value},,GML Visual story text
GMStdIfScore_Story_18,If instance score is less than or equal to ${value} on ${applyto},如果在${applyto}上的实例得分小于或等于${value}，那么就会出现这种情况,,GML Visual story text
GMStdIfScore_Story_19,If instance score is greater than or equal to ${value},如果实例得分大于或等于${value},,GML Visual story text
GMStdIfScore_Story_20,If instance score is greater than or equal to ${value} on ${applyto},如果在${applyto}上的实例得分大于或等于${value}，那么在${applyto}上的实例得分就会大于或等于${value},,GML Visual story text
GMStdIfLives_Story_1,If instance lives is not equal to ${value},如果实例寿命不等于${value},,GML Visual story text
GMStdIfLives_Story_2,If instance lives is not equal to ${value} on ${applyto},如果实例寿命不等于${applyto}上的${value},,GML Visual story text
GMStdIfLives_Story_3,If instance lives is not less than ${value},如果实例寿命不小于${value},,GML Visual story text
GMStdIfLives_Story_4,If instance lives is not less than ${value} on ${applyto},如果在${applyto}上的实例寿命不小于${value},,GML Visual story text
GMStdIfLives_Story_5,If instance lives is not greater than ${value},如果实例寿命不大于${value},,GML Visual story text
GMStdIfLives_Story_6,If instance lives is not greater than ${value} on ${applyto},如果在${applyto}上的实例寿命不大于${value},,GML Visual story text
GMStdIfLives_Story_7,If instance lives is not less than or equal to ${value},如果实例寿命不小于或等于${value},,GML Visual story text
GMStdIfLives_Story_8,If instance lives is not less than or equal to ${value} on ${applyto},如果在${applyto}上的实例寿命不小于或等于${value},,GML Visual story text
GMStdIfLives_Story_9,If instance lives is not greater than or equal to ${value},如果实例寿命不大于或等于${value},,GML Visual story text
GMStdIfLives_Story_10,If instance lives is not greater than or equal to ${value} on ${applyto},如果在${applyto}上，实例寿命不大于或等于${value},,GML Visual story text
GMStdIfLives_Story_11,If instance lives is equal to ${value},如果实例的寿命等于${value},,GML Visual story text
GMStdIfLives_Story_12,If instance lives is equal to ${value} on ${applyto},如果实例在${applyto}上的寿命等于${value}，那么在${applyto}上的寿命就等于${value},,GML Visual story text
GMStdIfLives_Story_13,If instance lives is less than ${value},如果实例寿命小于${value},,GML Visual story text
GMStdIfLives_Story_14,If instance lives is less than ${value} on ${applyto},如果在${applyto}上的实例寿命小于${value},,GML Visual story text
GMStdIfLives_Story_15,If instance lives is greater than ${value},如果实例的寿命大于${value}，则说明该实例的寿命大于${value},,GML Visual story text
GMStdIfLives_Story_16,If instance lives is greater than ${value} on ${applyto},如果在${applyto}上的实例寿命大于${value}，那么在${applyto}上,,GML Visual story text
GMStdIfLives_Story_17,If instance lives is less than or equal to ${value},如果实例寿命小于或等于${value},,GML Visual story text
GMStdIfLives_Story_18,If instance lives is less than or equal to ${value} on ${applyto},如果在${applyto}上的实例寿命小于或等于${value},,GML Visual story text
GMStdIfLives_Story_19,If instance lives is greater than or equal to ${value},如果实例寿命大于或等于${value},,GML Visual story text
GMStdIfLives_Story_20,If instance lives is greater than or equal to ${value} on ${applyto},如果在${applyto}上的实例寿命大于或等于${value},,GML Visual story text
GMStdIfHealth_Story_1,If instance health is not equal to ${value},如果实例健康值不等于${value},,GML Visual story text
GMStdIfHealth_Story_2,If instance health is not equal to ${value} on ${applyto},如果在${applyto}上，实例健康不等于${value},,GML Visual story text
GMStdIfHealth_Story_3,If instance health is not less than ${value},如果实例健康值不低于${value},,GML Visual story text
GMStdIfHealth_Story_4,If instance health is not less than ${value} on ${applyto},如果实例健康值在${applyto}上不小于${value},,GML Visual story text
GMStdIfHealth_Story_5,If instance health is not greater than ${value},如果实例健康值不大于${value},,GML Visual story text
GMStdIfHealth_Story_6,If instance health is not greater than ${value} on ${applyto},如果实例在${applyto}上的健康值不大于${value},,GML Visual story text
GMStdIfHealth_Story_7,If instance health is not less than or equal to ${value},如果实例健康值不小于或等于${value},,GML Visual story text
GMStdIfHealth_Story_8,If instance health is not less than or equal to ${value} on ${applyto},如果实例健康值在${applyto}上不小于或等于${value},,GML Visual story text
GMStdIfHealth_Story_9,If instance health is not greater than or equal to ${value},如果实例健康值不大于或等于${value},,GML Visual story text
GMStdIfHealth_Story_10,If instance health is not greater than or equal to ${value} on ${applyto},如果实例健康值在${applyto}上不大于或等于${value},,GML Visual story text
GMStdIfHealth_Story_11,If instance health is equal to ${value},如果实例健康值等于${value},,GML Visual story text
GMStdIfHealth_Story_12,If instance health is equal to ${value} on ${applyto},如果在${applyto}上，实例健康值等于${value},,GML Visual story text
GMStdIfHealth_Story_13,If instance health is less than ${value},如果实例的健康值小于${value}，那么就会出现这种情况,,GML Visual story text
GMStdIfHealth_Story_14,If instance health is less than ${value} on ${applyto},如果实例在${applyto}上的健康值小于${value}，则${applyto}上的健康值小于${value},,GML Visual story text
GMStdIfHealth_Story_15,If instance health is greater than ${value},如果实例健康值大于${value}，那么就会出现{value},,GML Visual story text
GMStdIfHealth_Story_16,If instance health is greater than ${value} on ${applyto},如果在${applyto}上，实例健康值大于${value}，则${applyto}上的健康值大于${value},,GML Visual story text
GMStdIfHealth_Story_17,If instance health is less than or equal to ${value},如果实例健康值小于或等于${value},,GML Visual story text
GMStdIfHealth_Story_18,If instance health is less than or equal to ${value} on ${applyto},如果在${applyto}上，实例健康值小于或等于${value},,GML Visual story text
GMStdIfHealth_Story_19,If instance health is greater than or equal to ${value},如果实例健康值大于或等于${value},,GML Visual story text
GMStdIfHealth_Story_20,If instance health is greater than or equal to ${value} on ${applyto},如果在${applyto}上，实例健康大于或等于${value},,GML Visual story text
GMStdDebugShowMessage_Story_1,Show debug message ${msg}${show_input_count},显示调试信息 ${msg}${show_input_count},,GML Visual story text
GMStdDebugShowMessage_Story_2,Show debug message ${msg} on ${applyto}${show_input_count},在${applyto}${show_input_count}上显示调试信息${msg},,GML Visual story text
GMStdSetWindowState_Story_1,Toggle window state,切换窗口状态,,GML Visual story text
GMStdSetWindowState_Story_2,Set window state to window,将窗口状态设置为窗口,,GML Visual story text
GMStdSetWindowState_Story_3,Set window state to fullscreen,设置窗口状态为全屏,,GML Visual story text
GMStdPartSystCreate_Story_1,Create a persistent particle system on layer ${layer} into ${var},在${layer}层上创建一个持久化的粒子系统，放入${var},,GML Visual story text
GMStdPartSystCreate_Story_2,Create a persistent particle system on layer ${layer} into ${var} on ${applyto},在${applyto}上的${layer}层上创建一个持久化的粒子系统到${var}中,,GML Visual story text
GMStdPartSystCreate_Story_3,Create a persistent particle system on layer ${layer} into temp ${var},在图层${layer}上创建一个持久化的粒子系统到临时${var}中,,GML Visual story text
GMStdPartSystCreate_Story_4,Create a persistent particle system on layer ${layer} into temp ${var} on ${applyto},在${applyto}上的${layer}层上创建一个持久化的粒子系统到临时${var}中,,GML Visual story text
GMStdPartSystCreate_Story_5,Create a particle system on layer ${layer} into ${var},在图层${layer}上创建一个粒子系统，放入${var},,GML Visual story text
GMStdPartSystCreate_Story_6,Create a particle system on layer ${layer} into ${var} on ${applyto},在${applyto}上的${layer}层上创建一个粒子系统到${var}中,,GML Visual story text
GMStdPartSystCreate_Story_7,Create a particle system on layer ${layer} into temp ${var},在图层${layer}上创建一个粒子系统，进入临时${var},,GML Visual story text
GMStdPartSystCreate_Story_8,Create a particle system on layer ${layer} into temp ${var} on ${applyto},在图层${layer}上创建一个粒子系统，在${applyto}上进入临时${var},,GML Visual story text
GMStdPartSystDestroy_Story_1,Destroy particle system ${system},销毁粒子系统 ${system},,GML Visual story text
GMStdPartSystDestroy_Story_2,Destroy particle system ${system} on ${applyto},在${applyto}上销毁粒子系统${system},,GML Visual story text
GMStdPartSystClear_Story_1,Clear particle system ${system},清理粒子系统 ${system},,GML Visual story text
GMStdPartSystClear_Story_2,Clear particle system ${system} on ${applyto},在${applyto}上清除粒子系统${system},,GML Visual story text
GMStdPauseParticles_Story_1,Resume particle system ${system},恢复粒子系统 ${system},,GML Visual story text
GMStdPauseParticles_Story_2,Resume particle system ${system} on ${applyto},在${applyto}上恢复粒子系统${system},,GML Visual story text
GMStdPauseParticles_Story_3,Pause particle system ${system},暂停粒子系统 ${system},,GML Visual story text
GMStdPauseParticles_Story_4,Pause particle system ${system} on ${applyto},在${applyto}上暂停粒子系统${system},,GML Visual story text
GMStdRefreshParticles_Story_1,Update particle system ${system},更新粒子系统 ${system},,GML Visual story text
GMStdRefreshParticles_Story_2,Update particle system ${system} on ${applyto},在${applyto}上更新粒子系统${system},,GML Visual story text
GMStdPartTypeCreate_Story_1,Create a new blending particle type into ${var},创建一个新的混合粒子类型到${var}中,,GML Visual story text
GMStdPartTypeCreate_Story_2,Create a new blending particle type into ${var} on ${applyto},在${applyto}上创建一个新的混合粒子类型到${var}中,,GML Visual story text
GMStdPartTypeCreate_Story_3,Create a new blending particle type into temp ${var},创建一个新的混合粒子类型到temp ${var},,GML Visual story text
GMStdPartTypeCreate_Story_4,Create a new blending particle type into temp ${var} on ${applyto},在${applyto}上创建一个新的混合粒子类型到临时${var}中,,GML Visual story text
GMStdPartTypeCreate_Story_5,Create a new particle type into ${var},创建一个新的粒子类型到${var}中,,GML Visual story text
GMStdPartTypeCreate_Story_6,Create a new particle type into ${var} on ${applyto},在${applyto}上创建一个新的粒子类型到${var},,GML Visual story text
GMStdPartTypeCreate_Story_7,Create a new particle type into temp ${var},在temp中创建一个新的粒子类型${var},,GML Visual story text
GMStdPartTypeCreate_Story_8,Create a new particle type into temp ${var} on ${applyto},在${applyto}上创建一个新的粒子类型到临时${var}中,,GML Visual story text
GMStdPartTypeDestroy_Story_1,Destroy particle type ${type},销毁粒子类型 ${type},,GML Visual story text
GMStdPartTypeDestroy_Story_2,Destroy particle type ${type} on ${applyto},在${applyto}上销毁粒子类型${type},,GML Visual story text
GMStdPartTypeSize_Story_1,Set size of particle type ${type} from min ${minsize} to max ${maxsize} with increase ${sizeincr} and wiggle ${wiggle},设置粒子类型${type}的大小从最小${minsize}到最大${maxsize}，并增加${sizeincr}和摆动${wiggle},,GML Visual story text
GMStdPartTypeSize_Story_2,Set size of particle type ${type} from min ${minsize} to max ${maxsize} with increase ${sizeincr} and wiggle ${wiggle} on ${applyto},将粒子类型${type}的大小从最小${minsize}设置为最大${maxsize}，并在${applyto}上增加${sizeincr}和摆动${wiggle},,GML Visual story text
GMStdPartTypeSprite_Story_1,Set sprite of particle type ${type} to ${sprite},设置粒子类型为${type}的精灵为${sprite},,GML Visual story text
GMStdPartTypeSprite_Story_2,Set sprite of particle type ${type} to ${sprite} on ${applyto},在${applyto}上设置粒子类型${type}为${sprite},,GML Visual story text
GMStdPartTypeShape_Story_1,Set shape of particle type ${type} to ${shape},设置粒子类型${type}的形状为${shape},,GML Visual story text
GMStdPartTypeShape_Story_2,Set shape of particle type ${type} to ${shape} on ${applyto},在${applyto}上设置粒子类型${type}的形状为${shape},,GML Visual story text
GMStdPartTypeColor_Story_1,"Set colour of particle type ${type} to start ${startcol}, mid ${midcol}, end ${endcol}",设置粒子类型${type}的颜色为开始${startcol}，中间${midcol}，结束${endcol},,GML Visual story text
GMStdPartTypeColor_Story_2,"Set colour of particle type ${type} to start ${startcol}, mid ${midcol}, end ${endcol} on ${applyto}",在${applyto}上设置粒子类型${type}的颜色为开始${startcol}，中间${midcol}，结束${endcol},,GML Visual story text
GMStdPartTypeAlpha_Story_1,"Set alpha channel of particle type ${type} to start ${start}, end ${end}",设置粒子类型${type}的alpha通道为开始${start}，结束${end},,GML Visual story text
GMStdPartTypeAlpha_Story_2,"Set alpha channel of particle type ${type} to start ${start}, end ${end} on ${applyto}",在${applyto}上设置粒子类型${type}的alpha通道开始${start}，结束${end},,GML Visual story text
GMStdPartTypeAlpha_Story_3,"Set alpha channel of particle type ${type} to start ${start}, mid ${middle}, end ${end}",设置粒子类型${type}的alpha通道为起始${start}，中间${middle}，结束${end},,GML Visual story text
GMStdPartTypeAlpha_Story_4,"Set alpha channel of particle type ${type} to start ${start}, mid ${middle}, end ${end} on ${applyto}",在${applyto}上设置粒子类型${type}的alpha通道为开始${start}，中间${middle}，结束${end},,GML Visual story text
GMStdPartTypeLife_Story_1,Set life of particle type ${typ} from min ${minlife} to max ${maxlife},设置粒子类型${typ}的寿命从最小${minlife}到最大${maxlife},,GML Visual story text
GMStdPartTypeLife_Story_2,Set life of particle type ${typ} from min ${minlife} to max ${maxlife} on ${applyto},在${applyto}上设置粒子类型${typ}的寿命从最小${minlife}到最大${maxlife},,GML Visual story text
GMStdPartTypeSpeed_Story_1,Set speed of particle type ${type} from min ${minspeed} to max ${maxspeed} with increase ${incr} and wiggle ${wiggle},设置粒子类型${type}的速度从最小值${minspeed}到最大值${maxspeed}，并增加${incr}和摆动${wiggle},,GML Visual story text
GMStdPartTypeSpeed_Story_2,Set speed of particle type ${type} from min ${minspeed} to max ${maxspeed} with increase ${incr} and wiggle ${wiggle} on ${applyto},设置粒子类型${type}的速度从最小${minspeed}到最大${maxspeed}，并在${applyto}上增加${incr}和摆动${wiggle},,GML Visual story text
GMStdPartTypeDirection_Story_1,Set direction of particle type ${type} from min ${mindir} to max ${maxdir} with rotation ${incr} and wiggle ${wiggle},设置粒子类型${type}的方向从最小${mindir}到最大${maxdir}，旋转${incr}，摆动${wiggle},,GML Visual story text
GMStdPartTypeDirection_Story_2,Set direction of particle type ${type} from min ${mindir} to max ${maxdir} with rotation ${incr} and wiggle ${wiggle} on ${applyto},设置粒子类型${type}的方向，从最小值${mindir}到最大值${maxdir}，在${applyto}上旋转${incr}和摆动${wiggle},,GML Visual story text
GMStdPartTypeOrientation_Story_1,Set relative orientation of particle type ${type} from min ${minangle} to max ${maxangle} with rotation ${incr} and wiggle ${wiggle},设置粒子类型${type}的相对方向，从最小${minangle}到最大${maxangle}，旋转${incr}，摆动${wiggle},,GML Visual story text
GMStdPartTypeOrientation_Story_2,Set relative orientation of particle type ${type} from min ${minangle} to max ${maxangle} with rotation ${incr} and wiggle ${wiggle} on ${applyto},在${applyto}上设置粒子类型${type}的相对方向，从最小${minangle}到最大${maxangle}，旋转${incr}，摆动${wiggle},,GML Visual story text
GMStdPartTypeOrientation_Story_3,Set orientation of particle type ${type} from min ${minangle} to max ${maxangle} with rotation ${incr} and wiggle ${wiggle},设置粒子类型${type}的方向从最小${minangle}到最大${maxangle}，旋转${incr}，摆动${wiggle},,GML Visual story text
GMStdPartTypeOrientation_Story_4,Set orientation of particle type ${type} from min ${minangle} to max ${maxangle} with rotation ${incr} and wiggle ${wiggle} on ${applyto},在${applyto}上设置粒子类型${type}的方向，从最小${minangle}到最大${maxangle}，旋转${incr}，摆动${wiggle},,GML Visual story text
GMStdPartTypeGravity_Story_1,Set gravity of particle type ${type} to ${amount} in direction ${direction},设置粒子类型${type}的重力为${amount}，方向为${direction},,GML Visual story text
GMStdPartTypeGravity_Story_2,Set gravity of particle type ${type} to ${amount} in direction ${direction} on ${applyto},在${applyto}上将粒子类型${type}的重力设置为${amount}，方向${direction},,GML Visual story text
GMStdPartTypeSecondary_Story_1,Create ${count} secondary particles from type ${type} of type ${secondary} per step,从类型${type}的${secondary}中，每步创建${count}二级粒子,,GML Visual story text
GMStdPartTypeSecondary_Story_2,Create ${count} secondary particles from type ${type} of type ${secondary} per step on ${applyto},在${applyto}上从${type}类型的${secondary}中每一步创建${count}二级粒子,,GML Visual story text
GMStdPartTypeSecondary_Story_3,Create ${count} secondary particles from type ${type} of type ${secondary} on death,死亡时从类型${类型}的${二级}中创建${数}二级粒子,,GML Visual story text
GMStdPartTypeSecondary_Story_4,Create ${count} secondary particles from type ${type} of type ${secondary} on death on ${applyto},在${applyto}上死亡时，从类型${type}的${secondary}中创建${count}二级粒子,,GML Visual story text
GMStdPartCreateBurst_Story_1,Burst ${number} particles of type ${type} in system ${system} at ${dnd_position},在系统${system}的${dnd_position}处爆发${number}类型${type}的粒子,,GML Visual story text
GMStdPartCreateBurst_Story_2,Burst ${number} particles of type ${type} in system ${system} at ${dnd_position} on ${applyto},在${applyto}上的${dnd_position}处，系统${system}中${type}类型的爆裂${number}粒子,,GML Visual story text
GMStdPartEmitCreate_Story_1,Create a particle emitter in system ${system} into ${emitter},在系统中创建一个粒子发射器 ${system} 进入 ${emitter},,GML Visual story text
GMStdPartEmitCreate_Story_2,Create a particle emitter in system ${system} into ${emitter} on ${applyto},在系统${system}中创建一个粒子发射器，在${applyto}上将其放入${emitter}中,,GML Visual story text
GMStdPartEmitCreate_Story_3,Create a particle emitter in system ${system} into temp ${emitter},在系统中创建一个粒子发射器 ${system} 进入临时 ${emitter},,GML Visual story text
GMStdPartEmitCreate_Story_4,Create a particle emitter in system ${system} into temp ${emitter} on ${applyto},在系统${system}中创建一个粒子发射器，在${applyto}上将其放入临时${emitter},,GML Visual story text
GMStdPartEmitDestroy_Story_1,Destroy particle emitter ${emitter} in system ${system},销毁系统中的粒子发射器 ${emitter} ${system},,GML Visual story text
GMStdPartEmitDestroy_Story_2,Destroy particle emitter ${emitter} in system ${system} on ${applyto},在${applyto}上销毁系统${system}中的粒子发射器${emitter},,GML Visual story text
GMStdPartEmitterEmit_Story_1,Burst ${number} particles of type ${type} from emitter ${emitter} in system ${system},从系统${system}中的发射器${emitter}中爆发${number}类型${type}的粒子,,GML Visual story text
GMStdPartEmitterEmit_Story_2,Burst ${number} particles of type ${type} from emitter ${emitter} in system ${system} on ${applyto},在${applyto}上从系统${system}中的发射器${emitter}中爆发${number}类型的${type}粒子,,GML Visual story text
GMStdPartEmitterEmit_Story_3,Stream ${number} particles of type ${type} from emitter ${emitter} in system ${system},从系统${system}中的发射器${emitter}流出${number}类型${type}的粒子,,GML Visual story text
GMStdPartEmitterEmit_Story_4,Stream ${number} particles of type ${type} from emitter ${emitter} in system ${system} on ${applyto},在${applyto}上，从系统${system}中的发射器${emitter}发射${number}类型的粒子流,,GML Visual story text
GMStdPartEmitRegion_Story_1,Emit from ${emitter} in system ${system} in a rectangular shape with linear distribution,从系统${系统}中的${发射器}发射，呈线性分布的矩形,,GML Visual story text
GMStdPartEmitRegion_Story_2,Emit from ${emitter} in system ${system} in a rectangular shape with linear distribution on ${applyto},从系统${emitter}中的${system}发射，在${applyto}上呈线性分布的矩形,,GML Visual story text
GMStdPartEmitRegion_Story_3,Emit from ${emitter} in system ${system} in a rectangular shape with gaussian distribution,从系统${系统}中的${发射器}发射，呈高斯分布的矩形,,GML Visual story text
GMStdPartEmitRegion_Story_4,Emit from ${emitter} in system ${system} in a rectangular shape with gaussian distribution on ${applyto},从系统${emitter}中的${system}发射，在${applyto}上呈高斯分布的矩形,,GML Visual story text
GMStdPartEmitRegion_Story_5,Emit from ${emitter} in system ${system} in a rectangular shape with inverse gaussian distribution,从系统${系统}中的${发射器}发射，呈逆高斯分布的矩形,,GML Visual story text
GMStdPartEmitRegion_Story_6,Emit from ${emitter} in system ${system} in a rectangular shape with inverse gaussian distribution on ${applyto},从系统${system}中的${emitter}发射，在${applyto}上呈逆高斯分布的矩形,,GML Visual story text
GMStdPartEmitRegion_Story_7,Emit from ${emitter} in system ${system} in a elliptical shape with linear distribution,从系统${系统}中的${发射器}发射，呈椭圆状，呈线性分布,,GML Visual story text
GMStdPartEmitRegion_Story_8,Emit from ${emitter} in system ${system} in a elliptical shape with linear distribution on ${applyto},从系统${emitter}中的${system}发射，在${applyto}上呈线性分布的椭圆状,,GML Visual story text
GMStdPartEmitRegion_Story_9,Emit from ${emitter} in system ${system} in a elliptical shape with gaussian distribution,从系统${系统}中的${发射器}发射，呈椭圆状，高斯分布,,GML Visual story text
GMStdPartEmitRegion_Story_10,Emit from ${emitter} in system ${system} in a elliptical shape with gaussian distribution on ${applyto},从系统${system}中的${emitter}发射，在${applyto}上呈高斯分布的椭圆状,,GML Visual story text
GMStdPartEmitRegion_Story_11,Emit from ${emitter} in system ${system} in a elliptical shape with inverse gaussian distribution,从系统${系统}中的${发射器}发射，呈椭圆状，呈逆高斯分布,,GML Visual story text
GMStdPartEmitRegion_Story_12,Emit from ${emitter} in system ${system} in a elliptical shape with inverse gaussian distribution on ${applyto},从系统${emitter}中的${system}发射，在${applyto}上呈逆高斯分布的椭圆状,,GML Visual story text
GMStdPartEmitRegion_Story_13,Emit from ${emitter} in system ${system} in a diamond shape with linear distribution,从系统${系统}中的${发射器}以线性分布的菱形发射,,GML Visual story text
GMStdPartEmitRegion_Story_14,Emit from ${emitter} in system ${system} in a diamond shape with linear distribution on ${applyto},从系统${emitter}中的${system}发射，在${applyto}上呈线性分布的菱形,,GML Visual story text
GMStdPartEmitRegion_Story_15,Emit from ${emitter} in system ${system} in a diamond shape with gaussian distribution,从系统${系统}中的${发射器}发射，呈高斯分布的菱形,,GML Visual story text
GMStdPartEmitRegion_Story_16,Emit from ${emitter} in system ${system} in a diamond shape with gaussian distribution on ${applyto},从系统${emitter}中的${system}发射，在${applyto}上呈高斯分布的菱形,,GML Visual story text
GMStdPartEmitRegion_Story_17,Emit from ${emitter} in system ${system} in a diamond shape with inverse gaussian distribution,从系统${系统}中的${发射器}发射，呈倒高斯分布的菱形,,GML Visual story text
GMStdPartEmitRegion_Story_18,Emit from ${emitter} in system ${system} in a diamond shape with inverse gaussian distribution on ${applyto},从系统${system}中的${emitter}发射，在${applyto}上呈逆高斯分布的菱形,,GML Visual story text
GMStdPartEmitRegion_Story_19,Emit from ${emitter} in system ${system} in a straight line with linear distribution,从系统${系统}中的${发射器}以线性分布的直线发射,,GML Visual story text
GMStdPartEmitRegion_Story_20,Emit from ${emitter} in system ${system} in a straight line with linear distribution on ${applyto},从系统${emitter}中的${system}以直线发射，在${applyto}上呈线性分布,,GML Visual story text
GMStdPartEmitRegion_Story_21,Emit from ${emitter} in system ${system} in a straight line with gaussian distribution,从系统${系统}中的${发射器}以高斯分布的直线发射,,GML Visual story text
GMStdPartEmitRegion_Story_22,Emit from ${emitter} in system ${system} in a straight line with gaussian distribution on ${applyto},从系统${emitter}中的${system}发射，在${applyto}上呈高斯分布的直线,,GML Visual story text
GMStdPartEmitRegion_Story_23,Emit from ${emitter} in system ${system} in a straight line with inverse gaussian distribution,从系统${系统}中的${发射器}以逆高斯分布的直线发射,,GML Visual story text
GMStdPartEmitRegion_Story_24,Emit from ${emitter} in system ${system} in a straight line with inverse gaussian distribution on ${applyto},从系统${emitter}中的${system}发射，在${applyto}上呈逆高斯分布的直线,,GML Visual story text
GMStdEffect_Story_1,Show effect at ${dnd_position},在${dnd_position}处显示效果,,GML Visual story text
GMStdEffect_Story_2,Show effect at ${dnd_position} on ${applyto},在${dnd_position}上显示${applyto}的效果,,GML Visual story text
GMStdConstructor,Constructor,构造者,,GML Visual function label for constructor
GMStdStatic,Static,静态的,,GML Visual function label for static
GMStdTemp,Temp,临时文件,,GML Visual function label for temp
GMStdDeclFunction_Desc,Declare a new function,发布一个新函数,,GML Visual declare a new function
GMStdDeclFunction_Name,Declare A New Function,发布一个新功能,,GML Visual declare a new function
GMStdDeclFunction_Story,Declare a new function ${funcName},发布一个新函数${funcName},,GML Visual declare a new function
